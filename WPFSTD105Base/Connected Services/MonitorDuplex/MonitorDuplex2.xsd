<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns:tns="http://Codesys.MonitorDuplex" elementFormDefault="qualified" targetNamespace="http://Codesys.MonitorDuplex" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import schemaLocation="http://localhost:63506/MonitorDuplex.svc?xsd=xsd2" namespace="http://schemas.datacontract.org/2004/07/GD_STD.Phone" />
  <xs:import schemaLocation="http://localhost:63506/MonitorDuplex.svc?xsd=xsd3" namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays" />
  <xs:element name="SetMonitorWorkOffset">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="value" nillable="true" type="xs:base64Binary" />
        <xs:element minOccurs="0" name="offset" type="xs:long" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="SetMonitorWorkOffsetResponse">
    <xs:complexType>
      <xs:sequence />
    </xs:complexType>
  </xs:element>
  <xs:element name="GetWorkMaterial">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="index" type="xs:int" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetWorkMaterialResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element xmlns:q1="http://schemas.datacontract.org/2004/07/GD_STD.Phone" minOccurs="0" name="GetWorkMaterialResult" type="q1:WorkMaterial" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetIndex">
    <xs:complexType>
      <xs:sequence />
    </xs:complexType>
  </xs:element>
  <xs:element name="SendIndex">
    <xs:complexType>
      <xs:sequence>
        <xs:element xmlns:q2="http://schemas.microsoft.com/2003/10/Serialization/Arrays" minOccurs="0" name="index" nillable="true" type="q2:ArrayOfshort" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="SendOther">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="current" type="xs:short" />
        <xs:element minOccurs="0" name="enOccupy" type="xs:double" />
        <xs:element minOccurs="0" name="exOccupy1" type="xs:double" />
        <xs:element minOccurs="0" name="exOccupy2" type="xs:double" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>