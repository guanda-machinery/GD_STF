//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WPFSTD105.ReadMemoryDuplex {
    
    
    /// 從WSDL文檔：
    /// 
    ///  
    /// 
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://Codesys.ReadMemoryDuplex", ConfigurationName="ReadMemoryDuplex.IReadMemoryDuplex", CallbackContract=typeof(WPFSTD105.ReadMemoryDuplex.IReadMemoryDuplexCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IReadMemoryDuplex {
        
        /// 從WSDL文檔：
        /// 
        ///  
        /// 
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://Codesys.ReadMemoryDuplex/IReadMemoryDuplex/GetPanel")]
        void GetPanel();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://Codesys.ReadMemoryDuplex/IReadMemoryDuplex/GetPanel")]
        System.Threading.Tasks.Task GetPanelAsync();
        
        /// 從WSDL文檔：
        /// 
        ///  
        /// 
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://Codesys.ReadMemoryDuplex/IReadMemoryDuplex/GetHost")]
        void GetHost();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://Codesys.ReadMemoryDuplex/IReadMemoryDuplex/GetHost")]
        System.Threading.Tasks.Task GetHostAsync();
        
        /// 從WSDL文檔：
        /// 
        ///  
        /// 
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://Codesys.ReadMemoryDuplex/IReadMemoryDuplex/GetMainAxisLocation")]
        void GetMainAxisLocation();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://Codesys.ReadMemoryDuplex/IReadMemoryDuplex/GetMainAxisLocation")]
        System.Threading.Tasks.Task GetMainAxisLocationAsync();
        
        /// 從WSDL文檔：
        /// 
        ///  
        /// 
        [System.ServiceModel.OperationContractAttribute(Action="http://Codesys.ReadMemoryDuplex/IReadMemoryDuplex/GetToken", ReplyAction="http://Codesys.ReadMemoryDuplex/IReadMemoryDuplex/GetTokenResponse")]
        string GetToken();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Codesys.ReadMemoryDuplex/IReadMemoryDuplex/GetToken", ReplyAction="http://Codesys.ReadMemoryDuplex/IReadMemoryDuplex/GetTokenResponse")]
        System.Threading.Tasks.Task<string> GetTokenAsync();
        
        /// 從WSDL文檔：
        /// 
        ///  
        /// 
        [System.ServiceModel.OperationContractAttribute(Action="http://Codesys.ReadMemoryDuplex/IReadMemoryDuplex/StartLogin", ReplyAction="http://Codesys.ReadMemoryDuplex/IReadMemoryDuplex/StartLoginResponse")]
        void StartLogin(bool run);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Codesys.ReadMemoryDuplex/IReadMemoryDuplex/StartLogin", ReplyAction="http://Codesys.ReadMemoryDuplex/IReadMemoryDuplex/StartLoginResponse")]
        System.Threading.Tasks.Task StartLoginAsync(bool run);
        
        /// 從WSDL文檔：
        /// 
        ///  
        /// 
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://Codesys.ReadMemoryDuplex/IReadMemoryDuplex/GetCurrent")]
        void GetCurrent();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://Codesys.ReadMemoryDuplex/IReadMemoryDuplex/GetCurrent")]
        System.Threading.Tasks.Task GetCurrentAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReadMemoryDuplexCallback {
        
        /// 從WSDL文檔：
        /// 
        ///  
        /// 
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://Codesys.ReadMemoryDuplex/IReadMemoryDuplex/SendPanel")]
        void SendPanel(GD_STD.PanelButton panelButton);
        
        /// 從WSDL文檔：
        /// 
        ///  
        /// 
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://Codesys.ReadMemoryDuplex/IReadMemoryDuplex/SendHost")]
        void SendHost(GD_STD.Host host);
        
        /// 從WSDL文檔：
        /// 
        ///  
        /// 
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://Codesys.ReadMemoryDuplex/IReadMemoryDuplex/SendMainAxisLocation")]
        void SendMainAxisLocation(GD_STD.MainAxisLocation axisLocation);
        
        /// 從WSDL文檔：
        /// 
        ///  
        /// 
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://Codesys.ReadMemoryDuplex/IReadMemoryDuplex/SendLogin")]
        void SendLogin(GD_STD.Phone.Login login);
        
        /// 從WSDL文檔：
        /// 
        ///  
        /// 
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://Codesys.ReadMemoryDuplex/IReadMemoryDuplex/SendDrills")]
        void SendDrills(GD_STD.Phone.WorkMaterial[] workMaterials);
        
        /// 從WSDL文檔：
        /// 
        ///  
        /// 
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://Codesys.ReadMemoryDuplex/IReadMemoryDuplex/SendIndex")]
        void SendIndex(ushort[] index);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReadMemoryDuplexChannel : WPFSTD105.ReadMemoryDuplex.IReadMemoryDuplex, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReadMemoryDuplexClient : System.ServiceModel.DuplexClientBase<WPFSTD105.ReadMemoryDuplex.IReadMemoryDuplex>, WPFSTD105.ReadMemoryDuplex.IReadMemoryDuplex {
        
        public ReadMemoryDuplexClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ReadMemoryDuplexClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ReadMemoryDuplexClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ReadMemoryDuplexClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ReadMemoryDuplexClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void GetPanel() {
            base.Channel.GetPanel();
        }
        
        public System.Threading.Tasks.Task GetPanelAsync() {
            return base.Channel.GetPanelAsync();
        }
        
        public void GetHost() {
            base.Channel.GetHost();
        }
        
        public System.Threading.Tasks.Task GetHostAsync() {
            return base.Channel.GetHostAsync();
        }
        
        public void GetMainAxisLocation() {
            base.Channel.GetMainAxisLocation();
        }
        
        public System.Threading.Tasks.Task GetMainAxisLocationAsync() {
            return base.Channel.GetMainAxisLocationAsync();
        }
        
        public string GetToken() {
            return base.Channel.GetToken();
        }
        
        public System.Threading.Tasks.Task<string> GetTokenAsync() {
            return base.Channel.GetTokenAsync();
        }
        
        public void StartLogin(bool run) {
            base.Channel.StartLogin(run);
        }
        
        public System.Threading.Tasks.Task StartLoginAsync(bool run) {
            return base.Channel.StartLoginAsync(run);
        }
        
        public void GetCurrent() {
            base.Channel.GetCurrent();
        }
        
        public System.Threading.Tasks.Task GetCurrentAsync() {
            return base.Channel.GetCurrentAsync();
        }
    }
}
