<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:SofSetting="clr-namespace:WPFSTD105.Properties;assembly=WPFSTD105"
    xmlns:WPFBase="clr-namespace:WPFWindowsBase;assembly=WPFWindowsBase"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:wpf="http://materialdesigninxaml.net/winfx/xaml/themes">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Texts.xaml" />
        <ResourceDictionary Source="Colours.xaml" />
        <ResourceDictionary Source="Fonts.xaml" />
        <ResourceDictionary Source="Badges.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <!--  Hoverless  -->
    <Style x:Key="Hoverless" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  Sys Icon Button  -->
    <Style
        x:Key="SysIconButton"
        BasedOn="{StaticResource Hoverless}"
        TargetType="{x:Type Button}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Padding" Value="1" />
    </Style>
    <!--  windows control button  -->
    <Style
        x:Key="WindowControlButton"
        BasedOn="{StaticResource BaseStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Width" Value="48" />
        <Setter Property="Height" Value="36" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter
                            Margin="7,0,7,6"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FF2A8AD4" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="WindowCloseButton"
        BasedOn="{StaticResource WindowControlButton}"
        TargetType="{x:Type Button}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="Red" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="WindowWarningButton" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="48" />
        <Setter Property="Height" Value="36" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter
                                Margin="2"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center" />
                            <wpf:Badged
                                Margin="25,8,0,0"
                                Badge="{TemplateBinding Tag}"
                                Style="{StaticResource badge_STD}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="WindowFunctionButton" TargetType="{x:Type Button}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter
                            Margin="2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--  OfficeMode control button  -->
    <Style
        x:Key="OfficeControlButton"
        BasedOn="{StaticResource BaseStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Height" Value="28" />
        <Setter Property="Width" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=Height}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        CornerRadius="20">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource solidclr_ButtonGold}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="OfficeCloseButton"
        BasedOn="{StaticResource OfficeControlButton}"
        TargetType="{x:Type Button}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource solidclr_ButtonRed}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="OfficeZoomInButton"
        BasedOn="{StaticResource OfficeControlButton}"
        TargetType="{x:Type Button}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="Lime" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="OfficeWarningButton"
        BasedOn="{StaticResource OfficeControlButton}"
        TargetType="{x:Type Button}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource solidclr_Gray}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--  登入Button  -->
    <Style
        x:Key="LoginButton"
        BasedOn="{StaticResource BaseStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="White" />
        <Setter Property="Foreground" Value="{StaticResource Foreground_Is_White}" />
        <Setter Property="BorderThickness" Value="5" />
        <Setter Property="FontFamily" Value="{StaticResource LatoBold}" />
        <Setter Property="Padding" Value="30,10" />
        <Setter Property="Margin" Value="0,20" />
        <Setter Property="WPFBase:IsBusyProperty.Value" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="10"
                        SnapsToDevicePixels="True">
                        <Grid>
                            <TextBlock
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                FontFamily="{TemplateBinding FontFamily}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Text="{TemplateBinding Content}"
                                Visibility="{TemplateBinding WPFBase:IsBusyProperty.Value,
                                                             Converter={WPFBase:BooleanToVisiblityConverter}}" />
                            <TextBlock
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Foreground="Black"
                                Style="{StaticResource SpinningText}"
                                Visibility="{TemplateBinding WPFBase:IsBusyProperty.Value,
                                                             Converter={WPFBase:BooleanToVisiblityConverter},
                                                             ConverterParameter=True}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="PreviewMouseLeftButtonDown">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetName="border"
                                        Storyboard.TargetProperty="Background.Color"
                                        To="{StaticResource BlueSky}"
                                        Duration="0:0:0.3" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="PreviewMouseLeftButtonUp">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetName="border"
                                        Storyboard.TargetProperty="Background.Color"
                                        To="Transparent"
                                        Duration="0:0:0.3" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter Property="Background" TargetName="border" Value="{StaticResource ColorBrushBlue}"/>-->
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource BrushBlueSky}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="#FFF4F4F4" />
                            <Setter TargetName="border" Property="BorderBrush" Value="#FFADB2B5" />
                            <Setter Property="Foreground" Value="#FF838383" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  標準型Button  -->
    <Style
        x:Key="StandardButton"
        BasedOn="{StaticResource BaseStyle}"
        TargetType="Button">
        <Setter Property="Background" Value="#FF2C2C2C" />
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}" />
        <Setter Property="Width" Value="{Binding ActualHeight, RelativeSource={RelativeSource Mode=Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="Transparent"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="10"
                        SnapsToDevicePixels="True">
                        <Grid>
                            <Viewbox>
                                <Border Padding="7">
                                    <TextBlock
                                        x:Name="text"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Focusable="False"
                                        FontFamily="{TemplateBinding FontFamily}"
                                        FontSize="{TemplateBinding FontSize}"
                                        Foreground="{TemplateBinding Foreground}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                        Text="{TemplateBinding Content}"
                                        Visibility="{TemplateBinding WPFBase:IsBusyProperty.Value,
                                                                     Converter={WPFBase:BooleanToVisiblityConverter}}" />
                                </Border>
                            </Viewbox>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="PreviewMouseLeftButtonDown">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetName="text"
                                        Storyboard.TargetProperty="Foreground.Color"
                                        To="{StaticResource Orange}"
                                        Duration="0:0:0.2" />
                                    <ThicknessAnimation
                                        Storyboard.TargetName="border"
                                        Storyboard.TargetProperty="BorderThickness"
                                        To="3"
                                        Duration="0:0:0.2" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="PreviewMouseLeftButtonUp">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetName="text"
                                        Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                        Duration="0:0:0.3" />
                                    <ThicknessAnimation
                                        Storyboard.TargetName="border"
                                        Storyboard.TargetProperty="BorderThickness"
                                        Duration="0:0:0.3" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <!--  懸停  -->
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetName="border"
                                        Storyboard.TargetProperty="Background.Color"
                                        To="#404040"
                                        Duration="0:0:0.01" />
                                    <ColorAnimation
                                        Storyboard.TargetName="border"
                                        Storyboard.TargetProperty="BorderBrush.Color"
                                        To="Transparent"
                                        Duration="0:0:0.2" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetName="border"
                                        Storyboard.TargetProperty="Background.Color"
                                        To="#FF2C2C2C"
                                        Duration="0:0:0.01" />
                                    <ColorAnimation
                                        Storyboard.TargetName="border"
                                        Storyboard.TargetProperty="BorderBrush.Color"
                                        To="Transparent"
                                        Duration="0:0:0.2" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <!--<Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            <Setter Property="Background" TargetName="border" Value="#404040"/>
                        </Trigger>-->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="#FFF4F4F4" />
                            <Setter TargetName="border" Property="BorderBrush" Value="#FFADB2B5" />
                            <Setter Property="Foreground" Value="#FF838383" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  多邊形Button
    <Style
        x:Key="MenuButton"
        BasedOn="{StaticResource BaseStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Black" />
        <Setter Property="Tag" Value="" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontFamily" Value="{StaticResource LatoRegular}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Grid>
                            <Polygon
                                Name="p"
                                Fill="{TemplateBinding Background}"
                                Points="0,35 61,0 122,35 122,106 61,141 0,106"
                                Stretch="Uniform"
                                Stroke="{StaticResource ColorBrushWhite}"
                                StrokeThickness="{StaticResource PolygonThickness}" />
                            <TextBlock
                                x:Name="block"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                Foreground="{StaticResource ColorBrushWhite}">
                                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <TextBlock Text="{Binding Tag}" />
                                    <TextBlock HorizontalAlignment="Center" Text="{Binding SelectionQuestion}" />
                                </StackPanel>
                            </TextBlock>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="PreviewMouseLeftButtonDown">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetName="p"
                                        Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                        To="{StaticResource Orange}"
                                        Duration="0:0:0.3" />
                                    <DoubleAnimation
                                        Storyboard.TargetName="p"
                                        Storyboard.TargetProperty="(Shape.StrokeThickness)"
                                        To="5"
                                        Duration="0:0:0.3" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="PreviewMouseLeftButtonUp">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetName="p"
                                        Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                        To="{StaticResource LightGray}"
                                        Duration="0:0:0.3" />
                                    <DoubleAnimation
                                        Storyboard.TargetName="p"
                                        Storyboard.TargetProperty="(Shape.StrokeThickness)"
                                        To="{StaticResource PolygonThickness}"
                                        Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="p" Property="Fill" Value="{StaticResource ColorBrushLightGray}" />
                            <Setter TargetName="p" Property="Stroke" Value="{StaticResource ColorBrushBlack}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="p" Property="Fill" Value="{StaticResource ColorBrushBlue}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    -->
    <DropShadowEffect
        x:Key="buttEff"
        BlurRadius="2"
        Opacity="1"
        ShadowDepth="0"
        Color="{Binding ParameterFontColor, Source={x:Static SofSetting:SofSetting.Default}}" />
    <Style
        x:Key="btn_Normal"
        BasedOn="{StaticResource MaterialDesignRaisedButton}"
        TargetType="Button">
        <Setter Property="FontFamily" Value="{StaticResource Standard}" />
        <Setter Property="Foreground" Value="{Binding ParameterFontColor, Source={x:Static SofSetting:SofSetting.Default}}" />
        <Setter Property="Background" Value="{Binding ParameterBackColor, Source={x:Static SofSetting:SofSetting.Default}}" />
        <Setter Property="BorderBrush" Value="{Binding BorderBrushColor, Source={x:Static SofSetting:SofSetting.Default}}" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>
    <!--漸層外框
    <Style x:Key="btn_FunctionKey" TargetType="Button">
        <Setter Property="FontFamily" Value="{Binding FontFamily, Source={ x:Static SofSetting:SofSetting.Default }}"/>
        <Setter Property="Foreground" Value="{ Binding ParameterFontColor, Source={ x:Static SofSetting:SofSetting.Default } }"/>
        <Setter Property="Background" Value="{ Binding ParameterBackColor, Source={ x:Static SofSetting:SofSetting.Default } }"/>
        <Setter Property="BorderBrush" Value="{ Binding BorderBrushColor, Source={ x:Static SofSetting:SofSetting.Default } }"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid>
                        <Border TextBlock.Foreground="{TemplateBinding Foreground}" x:Name="Border" CornerRadius="10" BorderThickness="2" Background="{ Binding ParameterBackColor, Source={ x:Static SofSetting:SofSetting.Default } }">
                            <wpf:Ripple Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Focusable="False"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" >
                                <wpf:Ripple.Clip>
                                    <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                        <Binding ElementName="Border" Path="ActualWidth" />
                                        <Binding ElementName="Border" Path="ActualHeight" />
                                        <Binding ElementName="Border" Path="CornerRadius" />
                                        <Binding ElementName="Border" Path="BorderThickness" />
                                    </MultiBinding>
                                </wpf:Ripple.Clip>
                            </wpf:Ripple>
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{ DynamicResource BorderLightGray }" Offset="0.0" />
                                            <GradientStop Color="{ DynamicResource BorderDarkGray }" Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                        </Border>
                        <ContentPresenter Margin="1,0,1,0" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.23"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Border" Value="{ StaticResource solidclr_DimGray }" />
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    -->
    <!--漸層外框+圓形
    <Style x:Key="btn_FunctionKey1" TargetType="Button">
        <Setter Property="FontFamily" Value="{Binding FontFamily, Source={ x:Static SofSetting:SofSetting.Default }}"/>
        <Setter Property="Foreground" Value="{ Binding ParameterFontColor, Source={ x:Static SofSetting:SofSetting.Default } }"/>
        <Setter Property="Background" Value="{ Binding ParameterBackColor, Source={ x:Static SofSetting:SofSetting.Default } }"/>
        <Setter Property="BorderBrush" Value="{ Binding BorderBrushColor, Source={ x:Static SofSetting:SofSetting.Default } }"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid>
                        <Border TextBlock.Foreground="{TemplateBinding Foreground}" x:Name="Border" CornerRadius="30" BorderThickness="2" Background="{ Binding ParameterBackColor, Source={ x:Static SofSetting:SofSetting.Default } }">
                            <wpf:Ripple Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Focusable="False"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" >
                                <wpf:Ripple.Clip>
                                    <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                        <Binding ElementName="Border" Path="ActualWidth" />
                                        <Binding ElementName="Border" Path="ActualHeight" />
                                        <Binding ElementName="Border" Path="CornerRadius" />
                                        <Binding ElementName="Border" Path="BorderThickness" />
                                    </MultiBinding>
                                </wpf:Ripple.Clip>
                            </wpf:Ripple>
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{ DynamicResource BorderLightGray }" Offset="0.0" />
                                            <GradientStop Color="{ DynamicResource BorderDarkGray }" Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                        </Border>
                        <ContentPresenter Margin="1,0,1,0" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.23"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Border" Value="{ StaticResource solidclr_DimGray }" />
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    -->
    <!--  弧角無外框加長型  -->
    <Style x:Key="btn_FunctionKey2" TargetType="Button">
        <Setter Property="FontFamily" Value="{Binding FontFamily, Source={x:Static SofSetting:SofSetting.Default}}" />
        <Setter Property="Foreground" Value="{Binding ParameterFontColor, Source={x:Static SofSetting:SofSetting.Default}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid>
                        <Border
                            x:Name="Border"
                            Background="{Binding ParameterBackColor, Source={x:Static SofSetting:SofSetting.Default}}"
                            BorderThickness="0"
                            CornerRadius="20"
                            TextBlock.Foreground="{TemplateBinding Foreground}">
                            <wpf:Ripple
                                Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Focusable="False"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <wpf:Ripple.Clip>
                                    <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                        <Binding ElementName="Border" Path="ActualWidth" />
                                        <Binding ElementName="Border" Path="ActualHeight" />
                                        <Binding ElementName="Border" Path="CornerRadius" />
                                    </MultiBinding>
                                </wpf:Ripple.Clip>
                            </wpf:Ripple>
                        </Border>
                        <ContentPresenter
                            Margin="40"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.23" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource solidclr_DimGray}" />
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  機台圖示按鈕模板  -->
    <Style x:Key="btn_IconKeyTemplate" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid>
                        <Border
                            x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3" />
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            TextBlock.FontFamily="{TemplateBinding FontFamily}"
                            TextBlock.FontSize="{TemplateBinding FontSize}"
                            TextBlock.Foreground="{TemplateBinding Foreground}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  不變底色按鈕模板  -->
    <Style x:Key="btn_ConstantIconKeyTemplate" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid>
                        <Border
                            x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3" />
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            TextBlock.FontFamily="{TemplateBinding FontFamily}"
                            TextBlock.FontSize="{TemplateBinding FontSize}"
                            TextBlock.Foreground="{TemplateBinding Foreground}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  機台匯入圖示按鈕  -->
    <Style
        x:Key="btn_ImportIconKey"
        BasedOn="{StaticResource btn_IconKeyTemplate}"
        TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="10,5" />
    </Style>
    <!--  一般圖示按鈕  -->
    <Style
        x:Key="btn_CommonIconKey"
        BasedOn="{StaticResource btn_IconKeyTemplate}"
        TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="5" />
    </Style>
    <!--  一般圖示按鈕  -->
    <Style
        x:Key="btn_ConstantIconKey"
        BasedOn="{StaticResource btn_ConstantIconKeyTemplate}"
        TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="5" />
    </Style>
    <!--機台圖示按鈕
    <Style x:Key="btn_FunctionKey3" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid>
                        <Border TextBlock.Foreground="{TemplateBinding Foreground}" x:Name="Border" CornerRadius="3" BorderThickness="0" Background="Transparent"/>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" Margin="5"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Border" Value="#FF6E6E6E" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    -->
    <!--  導航用按鈕  -->
    <Style
        x:Key="btn_PanelButton"
        BasedOn="{StaticResource btn_IconKeyTemplate}"
        TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid>
                        <Border
                            x:Name="Border"
                            Background="Transparent"
                            BorderThickness="0"
                            CornerRadius="12" />
                        <ContentPresenter
                            Margin="5"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  Logo用按鈕  -->
    <Style x:Key="btn_LogoButton" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid>
                        <Border
                            x:Name="Border"
                            Background="Transparent"
                            BorderThickness="0"
                            TextBlock.Foreground="{TemplateBinding Foreground}" />
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                    </Grid>
                    <!--  外框樣式調整  -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  機台功能面板按鈕  -->
    <Style x:Key="btn_FunctionPanelKey" TargetType="Button">
        <Setter Property="FontFamily" Value="{Binding FontFamily, Source={x:Static SofSetting:SofSetting.Default}}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Border
                        x:Name="border"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="12"
                        TextBlock.Foreground="{TemplateBinding Foreground}">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <GradientStop Offset="0" Color="#FFD7DDDB" />
                                <GradientStop Offset="1" Color="#FF8A8C91" />
                            </LinearGradientBrush>
                        </Border.Background>
                        <ContentPresenter
                            Margin="5"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  機台功能按鈕模板  -->
    <Style x:Key="btn_FunctionKeyTemplate" TargetType="{x:Type Button}">
        <Setter Property="BorderBrush" Value="{StaticResource solidclr_Gray}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid>
                        <Border
                            x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="0">
                            <wpf:Ripple
                                Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Focusable="False"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <wpf:Ripple.Clip>
                                    <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                        <Binding ElementName="Border" Path="ActualWidth" />
                                        <Binding ElementName="Border" Path="ActualHeight" />
                                        <Binding ElementName="Border" Path="CornerRadius" />
                                    </MultiBinding>
                                </wpf:Ripple.Clip>
                            </wpf:Ripple>
                        </Border>
                        <ContentPresenter
                            x:Name="Content"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            TextBlock.FontFamily="{TemplateBinding FontFamily}"
                            TextBlock.FontSize="{TemplateBinding FontSize}"
                            TextBlock.FontWeight="{TemplateBinding FontWeight}"
                            TextBlock.Foreground="{TemplateBinding Foreground}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource solidclr_Gray}" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="0" />
                            <Setter TargetName="Content" Property="TextBlock.Foreground" Value="{StaticResource solidclr_CreamyGray}" />
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  機台一般功能鍵  -->
    <Style
        x:Key="btn_CommonFunctionKey_STD"
        BasedOn="{StaticResource btn_FunctionKeyTemplate}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource solidclr_Gray}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontSize" Value="{Binding SubTitleFontSize, Source={x:Static SofSetting:SofSetting.Default}}" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Width" Value="120" />
        <Setter Property="Margin" Value="5,20" />
    </Style>
    <!--  弧角無外框短版型  -->
    <Style
        x:Key="btn_FunctionKey5"
        BasedOn="{StaticResource MaterialDesignRaisedButton}"
        TargetType="Button">
        <Setter Property="Foreground" Value="{Binding ParameterFontColor, Source={x:Static SofSetting:SofSetting.Default}}" />
        <Setter Property="FontFamily" Value="{Binding FontFamily, Source={x:Static SofSetting:SofSetting.Default}}" />
        <Setter Property="Padding" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid>
                        <!--  外框樣式調整  -->
                        <Border
                            x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            CornerRadius="{TemplateBinding Tag}"
                            TextBlock.Foreground="{TemplateBinding Foreground}">
                            <wpf:Ripple
                                Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Focusable="False"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <!--  控制波紋範圍  -->
                                <wpf:Ripple.Clip>
                                    <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                        <Binding ElementName="Border" Path="ActualWidth" />
                                        <Binding ElementName="Border" Path="ActualHeight" />
                                        <Binding ElementName="Border" Path="CornerRadius" />
                                    </MultiBinding>
                                </wpf:Ripple.Clip>
                            </wpf:Ripple>
                        </Border>
                        <!--  按鈕文字  -->
                        <ContentPresenter
                            Margin="40,5"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  機台提交按鈕  -->
    <Style x:Key="btn_Submit_STD" TargetType="Button">
        <Setter Property="FontFamily" Value="{Binding FontFamily, Source={x:Static SofSetting:SofSetting.Default}}" />
        <Setter Property="Width" Value="160" />
        <Setter Property="Height" Value="50" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid>
                        <!--  外框樣式調整  -->
                        <Border
                            x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            CornerRadius="15">
                            <wpf:Ripple
                                Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Focusable="False"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <!--  控制波紋範圍  -->
                                <wpf:Ripple.Clip>
                                    <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                        <Binding ElementName="Border" Path="ActualWidth" />
                                        <Binding ElementName="Border" Path="ActualHeight" />
                                        <Binding ElementName="Border" Path="CornerRadius" />
                                    </MultiBinding>
                                </wpf:Ripple.Clip>
                            </wpf:Ripple>
                        </Border>
                        <!--  按鈕文字  -->
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True"
                            TextBlock.FontFamily="{TemplateBinding FontFamily}"
                            TextBlock.FontSize="{TemplateBinding FontSize}"
                            TextBlock.FontWeight="{TemplateBinding FontWeight}"
                            TextBlock.Foreground="{TemplateBinding Foreground}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  機台取消按鈕  -->
    <Style x:Key="btn_Cancel_STD" TargetType="Button">
        <Setter Property="FontFamily" Value="{Binding FontFamily, Source={x:Static SofSetting:SofSetting.Default}}" />
        <Setter Property="Width" Value="160" />
        <Setter Property="Height" Value="50" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid>
                        <!--  外框樣式調整  -->
                        <Border
                            x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            CornerRadius="10">
                            <wpf:Ripple
                                Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Focusable="False"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <!--  控制波紋範圍  -->
                                <wpf:Ripple.Clip>
                                    <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                        <Binding ElementName="Border" Path="ActualWidth" />
                                        <Binding ElementName="Border" Path="ActualHeight" />
                                        <Binding ElementName="Border" Path="CornerRadius" />
                                    </MultiBinding>
                                </wpf:Ripple.Clip>
                            </wpf:Ripple>
                        </Border>
                        <!--  按鈕文字  -->
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True"
                            TextBlock.FontFamily="{TemplateBinding FontFamily}"
                            TextBlock.FontSize="{TemplateBinding FontSize}"
                            TextBlock.FontWeight="{TemplateBinding FontWeight}"
                            TextBlock.Foreground="{TemplateBinding Foreground}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  機台取消按鈕  -->
    <Style x:Key="btn_CloseIcon_STD" TargetType="Button">
        <Setter Property="FontFamily" Value="{Binding FontFamily, Source={x:Static SofSetting:SofSetting.Default}}" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid>
                        <!--  按鈕文字  -->
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True"
                            TextBlock.FontFamily="{TemplateBinding FontFamily}"
                            TextBlock.FontSize="{TemplateBinding FontSize}"
                            TextBlock.FontWeight="{TemplateBinding FontWeight}"
                            TextBlock.Foreground="{TemplateBinding Foreground}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  顯示3D按鈕  -->
    <Style
        x:Key="btn_Display3D"
        BasedOn="{StaticResource btn_CloseIcon_STD}"
        TargetType="{x:Type Button}">
        <Setter Property="Width" Value="70" />
        <Setter Property="Height" Value="70" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="ToolTip" Value="顯示3D圖形" />
    </Style>
    <!--  登入按鈕  -->
    <Style x:Key="btn_LoginButton" TargetType="Button">
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontFamily" Value="{Binding FontFamily, Source={x:Static SofSetting:SofSetting.Default}}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid>
                        <Border
                            x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            CornerRadius="20"
                            TextBlock.Foreground="{TemplateBinding Foreground}">
                            <wpf:Ripple
                                Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Focusable="False"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <wpf:Ripple.Clip>
                                    <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                        <Binding ElementName="Border" Path="ActualWidth" />
                                        <Binding ElementName="Border" Path="ActualHeight" />
                                        <Binding ElementName="Border" Path="CornerRadius" />
                                    </MultiBinding>
                                </wpf:Ripple.Clip>
                            </wpf:Ripple>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource solidclr_SilverGray}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  辦公室主頁按鈕  -->
    <Style
        x:Key="btn_MainFunctionKey_Office"
        BasedOn="{StaticResource btn_FunctionKeyTemplate}"
        TargetType="Button">
        <Setter Property="FontFamily" Value="{Binding FontFamily, Source={x:Static SofSetting:SofSetting.Default}}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{StaticResource solidclr_CreamyWhite}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Height" Value="60" />
        <Setter Property="Width" Value="160" />
        <Setter Property="Margin" Value="10,0" />
    </Style>
    <!--  無框線僅字體按鈕  -->
    <Style x:Key="btn_FunctionKey4" TargetType="Button">
        <Setter Property="FontFamily" Value="{Binding FontFamily, Source={x:Static SofSetting:SofSetting.Default}}" />
        <Setter Property="FontSize" Value="{Binding TitleFontSize, Source={x:Static SofSetting:SofSetting.Default}}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="0">
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            TextBlock.FontFamily="{TemplateBinding FontFamily}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Background" Value="#FF666666" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--  無框線僅字體按鈕  -->
    <Style x:Key="btn_FunctionKey7" TargetType="Button">
        <Setter Property="FontFamily" Value="{Binding FontFamily, Source={x:Static SofSetting:SofSetting.Default}}" />
        <Setter Property="FontSize" Value="{Binding TitleFontSize, Source={x:Static SofSetting:SofSetting.Default}}" />
        <Setter Property="Background" Value="{StaticResource solidclr_CreamyWhite}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource solidclr_DarkGray}" />
        <Setter Property="BitmapEffect">
            <Setter.Value>
                <DropShadowBitmapEffect
                    Direction="330"
                    Opacity="0.5"
                    ShadowDepth="3"
                    Color="{StaticResource clr_DarkGray}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="20">
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            TextBlock.FontFamily="{TemplateBinding FontFamily}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Background" Value="{StaticResource solidclr_LightGray}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--  3D 圓形凸起按鈕  -->
    <Style x:Key="btn_3DEllipseButton" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="{Binding FontFamily, Source={x:Static SofSetting:SofSetting.Default}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <Ellipse
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Fill="{TemplateBinding Background}">
                            <Ellipse.Effect>
                                <DropShadowEffect
                                    Direction="315"
                                    ShadowDepth="4"
                                    Color="Black" />
                            </Ellipse.Effect>
                        </Ellipse>
                        <Ellipse
                            Width="{TemplateBinding MinWidth}"
                            Height="{TemplateBinding MinHeight}"
                            Margin="2,2,0,0"
                            Opacity="0.7"
                            Stroke="White"
                            StrokeThickness="2">
                            <Ellipse.Effect>
                                <BlurEffect KernelType="Gaussian" Radius="2" />
                            </Ellipse.Effect>
                        </Ellipse>
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Content}"
                            TextBlock.FontFamily="{TemplateBinding FontFamily}"
                            TextBlock.FontSize="{TemplateBinding FontSize}"
                            TextBlock.Foreground="{TemplateBinding Foreground}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  三角形按鈕-頭朝右  -->
    <Style x:Key="btn_TriangleRight" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource solidclr_DarkGray}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="bor_LeftTop"
                        Background="{TemplateBinding Background}"
                        BorderBrush="#49FFFFFF"
                        BorderThickness="3,3,0,0"
                        CornerRadius="15">
                        <Grid>
                            <Border
                                x:Name="bor_RightBottom"
                                BorderBrush="#49000000"
                                BorderThickness="0,0,3,3"
                                CornerRadius="{Binding ElementName=bor_LeftTop, Path=CornerRadius}" />
                            <Viewbox>
                                <Path
                                    x:Name="Path"
                                    Margin="8"
                                    Data="M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"
                                    Fill="Transparent"
                                    RenderTransformOrigin="0.5,0.5"
                                    Stroke="{StaticResource solidclr_CreamyWhite}"
                                    StrokeThickness="3">
                                    <Path.Effect>
                                        <BlurEffect KernelType="Gaussian" Radius="1" />
                                    </Path.Effect>
                                    <Path.RenderTransform>
                                        <RotateTransform Angle="90" />
                                    </Path.RenderTransform>
                                </Path>
                            </Viewbox>
                            <ContentPresenter
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Content}"
                                TextBlock.FontFamily="{TemplateBinding FontFamily}"
                                TextBlock.FontSize="{TemplateBinding FontSize}"
                                TextBlock.Foreground="{TemplateBinding Foreground}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Button.PreviewMouseLeftButtonDown">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetName="Path"
                                        Storyboard.TargetProperty="(Path.Stroke).Color"
                                        To="Lime"
                                        Duration="0:0:0.1" />
                                    <ThicknessAnimation
                                        Storyboard.TargetName="bor_LeftTop"
                                        Storyboard.TargetProperty="BorderThickness"
                                        To="0,0,2,2"
                                        Duration="0:0:0.01" />
                                    <ThicknessAnimation
                                        Storyboard.TargetName="bor_RightBottom"
                                        Storyboard.TargetProperty="BorderThickness"
                                        To="2,2,0,0"
                                        Duration="0:0:0.01" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.PreviewMouseLeftButtonUp">
                            <BeginStoryboard>
                                <Storyboard FillBehavior="HoldEnd">
                                    <ColorAnimation
                                        Storyboard.TargetName="Path"
                                        Storyboard.TargetProperty="(Path.Stroke).Color"
                                        To="#FFF3F3F3"
                                        Duration="0:0:0.1" />
                                    <ThicknessAnimation
                                        Storyboard.TargetName="bor_LeftTop"
                                        Storyboard.TargetProperty="BorderThickness"
                                        To="2,2,0,0"
                                        Duration="0:0:0.01" />
                                    <ThicknessAnimation
                                        Storyboard.TargetName="bor_RightBottom"
                                        Storyboard.TargetProperty="BorderThickness"
                                        To="0,0,2,2"
                                        Duration="0:0:0.01" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  三角形按鈕-頭朝左  -->
    <Style x:Key="btn_TriangleLeft" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource solidclr_DarkGray}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="bor_LeftTop"
                        Background="{TemplateBinding Background}"
                        BorderBrush="#49FFFFFF"
                        BorderThickness="2,2,0,0"
                        CornerRadius="15">
                        <Grid>
                            <Border
                                x:Name="bor_RightBottom"
                                BorderBrush="#49000000"
                                BorderThickness="0,0,2,2"
                                CornerRadius="{Binding ElementName=bor_LeftTop, Path=CornerRadius}" />
                            <Viewbox>
                                <Path
                                    x:Name="Path"
                                    Margin="8"
                                    Data="M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"
                                    Fill="Transparent"
                                    RenderTransformOrigin="0.5,0.5"
                                    Stroke="{StaticResource solidclr_CreamyWhite}"
                                    StrokeThickness="3">
                                    <Path.Effect>
                                        <BlurEffect KernelType="Gaussian" Radius="1" />
                                    </Path.Effect>
                                    <Path.RenderTransform>
                                        <RotateTransform Angle="270" />
                                    </Path.RenderTransform>
                                </Path>
                            </Viewbox>
                            <ContentPresenter
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Content}"
                                TextBlock.FontFamily="{TemplateBinding FontFamily}"
                                TextBlock.FontSize="{TemplateBinding FontSize}"
                                TextBlock.Foreground="{TemplateBinding Foreground}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Button.PreviewMouseLeftButtonDown">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetName="Path"
                                        Storyboard.TargetProperty="(Path.Stroke).Color"
                                        To="Lime"
                                        Duration="0:0:0.1" />
                                    <ThicknessAnimation
                                        Storyboard.TargetName="bor_LeftTop"
                                        Storyboard.TargetProperty="BorderThickness"
                                        To="0,0,2,2"
                                        Duration="0:0:0.01" />
                                    <ThicknessAnimation
                                        Storyboard.TargetName="bor_RightBottom"
                                        Storyboard.TargetProperty="BorderThickness"
                                        To="2,2,0,0"
                                        Duration="0:0:0.01" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.PreviewMouseLeftButtonUp">
                            <BeginStoryboard>
                                <Storyboard FillBehavior="HoldEnd">
                                    <ColorAnimation
                                        Storyboard.TargetName="Path"
                                        Storyboard.TargetProperty="(Path.Stroke).Color"
                                        To="{StaticResource clr_CreamyWhite}"
                                        Duration="0:0:0.1" />
                                    <ThicknessAnimation
                                        Storyboard.TargetName="bor_LeftTop"
                                        Storyboard.TargetProperty="BorderThickness"
                                        To="2,2,0,0"
                                        Duration="0:0:0.01" />
                                    <ThicknessAnimation
                                        Storyboard.TargetName="bor_RightBottom"
                                        Storyboard.TargetProperty="BorderThickness"
                                        To="0,0,2,2"
                                        Duration="0:0:0.01" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btn_3DSunkenRectButton" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="{Binding FontFamily, Source={x:Static SofSetting:SofSetting.Default}}" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="bor_LeftTop"
                        Background="{TemplateBinding Background}"
                        BorderBrush="#49000000"
                        BorderThickness="2,2,0,0"
                        CornerRadius="3">
                        <Grid>
                            <Border
                                x:Name="bor_RightBottom"
                                BorderBrush="#49FFFFFF"
                                BorderThickness="0,0,2,2"
                                CornerRadius="{Binding ElementName=bor_LeftTop, Path=CornerRadius}" />
                            <ContentPresenter
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Content}"
                                TextBlock.FontFamily="{TemplateBinding FontFamily}"
                                TextBlock.FontSize="{TemplateBinding FontSize}"
                                TextBlock.Foreground="{TemplateBinding Foreground}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btn_3DRaisedButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="bor_LeftTop"
                        Background="{TemplateBinding Background}"
                        BorderBrush="#AAFFFFFF"
                        BorderThickness="1.2,1.2,0,0"
                        CornerRadius="45">
                        <Grid>
                            <Border
                                x:Name="bor_RightBottom"
                                BorderBrush="#AA000000"
                                BorderThickness="0,0,1.2,1.2"
                                CornerRadius="{Binding ElementName=bor_LeftTop, Path=CornerRadius}" />
                            <ContentPresenter
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Content}"
                                TextBlock.FontFamily="{TemplateBinding FontFamily}"
                                TextBlock.FontSize="{TemplateBinding FontSize}"
                                TextBlock.Foreground="{TemplateBinding Foreground}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Button.PreviewMouseLeftButtonDown">
                            <BeginStoryboard>
                                <Storyboard FillBehavior="HoldEnd">
                                    <ColorAnimation
                                        Storyboard.TargetName="bor_LeftTop"
                                        Storyboard.TargetProperty="(Border.BorderBrush).Color"
                                        To="#AA000000"
                                        Duration="0" />
                                    <ColorAnimation
                                        Storyboard.TargetName="bor_RightBottom"
                                        Storyboard.TargetProperty="(Border.BorderBrush).Color"
                                        To="#AAFFFFFF "
                                        Duration="0" />
                                    <ThicknessAnimation
                                        Storyboard.TargetName="bor_LeftTop"
                                        Storyboard.TargetProperty="BorderThickness"
                                        To="1.7,1.7,0,0"
                                        Duration="0" />
                                    <ThicknessAnimation
                                        Storyboard.TargetName="bor_RightBottom"
                                        Storyboard.TargetProperty="BorderThickness"
                                        To="0,0,1.7,1.7"
                                        Duration="0" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.PreviewMouseLeftButtonUp">
                            <BeginStoryboard>
                                <Storyboard FillBehavior="HoldEnd">
                                    <ColorAnimation
                                        Storyboard.TargetName="bor_LeftTop"
                                        Storyboard.TargetProperty="(Border.BorderBrush).Color"
                                        To="#AAFFFFFF"
                                        Duration="0" />
                                    <ColorAnimation
                                        Storyboard.TargetName="bor_RightBottom"
                                        Storyboard.TargetProperty="(Border.BorderBrush).Color"
                                        To="#AA000000"
                                        Duration="0" />
                                    <ThicknessAnimation
                                        Storyboard.TargetName="bor_LeftTop"
                                        Storyboard.TargetProperty="BorderThickness"
                                        To="1.2,1.2,0,0"
                                        Duration="0" />
                                    <ThicknessAnimation
                                        Storyboard.TargetName="bor_RightBottom"
                                        Storyboard.TargetProperty="BorderThickness"
                                        To="0,0,1.2,1.2"
                                        Duration="0" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--  搖桿方向鍵  -->
    <Style x:Key="btn_3D_DirectionKey" TargetType="Button">
        <Setter Property="Height" Value="300" />
        <Setter Property="Width" Value="250" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid>
                        <Border>
                            <Grid>
                                <Viewbox>
                                    <Canvas Width="512" Height="512">
                                        <Path
                                            Name="leftPath"
                                            Data="M279.9,481.5l142.4-141.7c5.7-5.7,9.2-13.1,9.9-21.1l20.6-234.4c0.4-4.8-0.2-9.6-1.7-14.1l-9.3-26.7                         c-4.7-13.7-17.6-22.9-32.1-22.9H112.5c-11.7,0-22.6,6-28.8,16L64.4,67.4c-3.9,6.3-5.7,13.7-5.1,21l20.2,230.3                         c0.7,8,4.2,15.5,9.9,21.1l142.5,141.7C245.2,494.7,266.6,494.7,279.9,481.5z"
                                            Fill="{StaticResource solidclr_BlackGray}"
                                            Stroke="{StaticResource solidclr_BlackGray}"
                                            StrokeThickness="10">
                                            <Path.Effect>
                                                <BlurEffect KernelType="Box" Radius="3" />
                                            </Path.Effect>
                                        </Path>
                                    </Canvas>
                                </Viewbox>
                                <Viewbox>
                                    <Canvas
                                        Name="rightPath"
                                        Width="512"
                                        Height="450"
                                        Margin="10,20,10,50">
                                        <Path
                                            Margin="0"
                                            Data="M279.9,481.5l142.4-141.7c5.7-5.7,9.2-13.1,9.9-21.1l20.6-234.4c0.4-4.8-0.2-9.6-1.7-14.1l-9.3-26.7                         c-4.7-13.7-17.6-22.9-32.1-22.9H112.5c-11.7,0-22.6,6-28.8,16L64.4,67.4c-3.9,6.3-5.7,13.7-5.1,21l20.2,230.3                         c0.7,8,4.2,15.5,9.9,21.1l142.5,141.7C245.2,494.7,266.6,494.7,279.9,481.5z"
                                            Fill="{StaticResource solidclr_BlackGray}"
                                            Stroke="{StaticResource solidclr_DarkGray}"
                                            StrokeThickness="12">
                                            <Path.Effect>
                                                <BlurEffect KernelType="Box" Radius="3" />
                                            </Path.Effect>
                                        </Path>
                                    </Canvas>
                                </Viewbox>
                                <ContentPresenter
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Content="{TemplateBinding Content}"
                                    TextBlock.FontFamily="{TemplateBinding FontFamily}"
                                    TextBlock.FontSize="{TemplateBinding FontSize}"
                                    TextBlock.FontWeight="{TemplateBinding FontWeight}"
                                    TextBlock.Foreground="{TemplateBinding Foreground}" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="rightPath"
                                            Storyboard.TargetProperty="Height"
                                            To="500"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="rightPath"
                                            Storyboard.TargetProperty="Width"
                                            To="512"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="rightPath"
                                            Storyboard.TargetProperty="Height"
                                            To="450"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="rightPath"
                                            Storyboard.TargetProperty="Width"
                                            To="520"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  搖桿橢圓鍵上  -->
    <Style x:Key="btn_3D_EllipseKeyUp" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid>
                        <Border Background="{TemplateBinding Background}" CornerRadius="60,60,0,0" />
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Content}"
                            TextBlock.FontFamily="{TemplateBinding FontFamily}"
                            TextBlock.FontSize="{TemplateBinding FontSize}"
                            TextBlock.FontWeight="{TemplateBinding FontWeight}"
                            TextBlock.Foreground="{TemplateBinding Foreground}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  搖桿橢圓鍵下  -->
    <Style x:Key="btn_3D_EllipseKeyDown" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid>
                        <Border Background="{TemplateBinding Background}" CornerRadius="0,0,60,60" />
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Content}"
                            TextBlock.FontFamily="{TemplateBinding FontFamily}"
                            TextBlock.FontSize="{TemplateBinding FontSize}"
                            TextBlock.FontWeight="{TemplateBinding FontWeight}"
                            TextBlock.Foreground="{TemplateBinding Foreground}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  搖桿用圓形無外框透明按鈕  -->
    <Style x:Key="btn_JoystickCircleButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid>
                        <Border
                            x:Name="Border"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Background="Transparent"
                            BorderBrush="{StaticResource solidclr_DimGray}"
                            BorderThickness="0"
                            CornerRadius="45"
                            Opacity="0.5" />
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Content}"
                            TextBlock.FontFamily="{TemplateBinding FontFamily}"
                            TextBlock.FontSize="{TemplateBinding FontSize}"
                            TextBlock.FontWeight="{TemplateBinding FontWeight}"
                            TextBlock.Foreground="{TemplateBinding Foreground}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="BorderThickness"
                                            To="15"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="BorderThickness"
                                            To="0"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--  圓形無外框透明按鈕  -->
    <Style x:Key="btn_TransparentCircleButton" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="{Binding FontFamily, Source={x:Static SofSetting:SofSetting.Default}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid>
                        <Border
                            x:Name="Border"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Background="Transparent"
                            BorderThickness="0"
                            CornerRadius="45" />
                        <ContentPresenter
                            Margin="5"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True"
                            TextBlock.FontFamily="{TemplateBinding FontFamily}"
                            TextBlock.FontSize="{TemplateBinding FontSize}"
                            TextBlock.FontWeight="{TemplateBinding FontWeight}"
                            TextBlock.Foreground="{TemplateBinding Foreground}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--  方形無外框透明按鈕  -->
    <Style x:Key="btn_RectButton" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="{Binding FontFamily, Source={x:Static SofSetting:SofSetting.Default}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid>
                        <Border
                            x:Name="Border"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Background="Transparent"
                            BorderThickness="0" />
                        <ContentPresenter
                            Margin="5"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True"
                            TextBlock.FontFamily="{TemplateBinding FontFamily}"
                            TextBlock.FontSize="{TemplateBinding FontSize}"
                            TextBlock.FontWeight="{TemplateBinding FontWeight}"
                            TextBlock.Foreground="{TemplateBinding Foreground}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--  辦公室功能按鈕  -->
    <Style x:Key="btn_OfficeFunctionKey" TargetType="Button">
        <Setter Property="FontFamily" Value="{Binding FontFamily, Source={x:Static SofSetting:SofSetting.Default}}" />
        <Setter Property="FontSize" Value="{Binding SubTitleFontSize, Source={x:Static SofSetting:SofSetting.Default}}" />
        <Setter Property="Foreground" Value="{StaticResource solidclr_DimGray}" />
        <Setter Property="BorderThickness" Value="5" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="30">
                        <Border.BorderBrush>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                <GradientStop Offset="0" Color="#FFE7E8EC" />
                                <GradientStop Offset="0.1855" Color="#FFE3E5E9" />
                                <GradientStop Offset="0.3507" Color="#FFD9DADE" />
                                <GradientStop Offset="0.5083" Color="#FFC6C9CC" />
                                <GradientStop Offset="0.6611" Color="#FFADB0B3" />
                                <GradientStop Offset="0.8105" Color="#FF8C9193" />
                                <GradientStop Offset="0.9555" Color="#FF646A6C" />
                                <GradientStop Offset="1" Color="#FF565D5E" />
                            </LinearGradientBrush>
                        </Border.BorderBrush>
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                <GradientStop Offset="0" Color="#FFE7E8EC" />
                                <GradientStop Offset="0.23309999999999997" Color="#FFDFE0E4" />
                                <GradientStop Offset="0.6021" Color="#FFCACBCD" />
                                <GradientStop Offset="1" Color="#FFACAEAD" />
                            </LinearGradientBrush>
                        </Border.Background>
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            TextBlock.FontFamily="{TemplateBinding FontFamily}"
                            TextBlock.Foreground="{TemplateBinding Foreground}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  純文字提交按鈕  -->
    <Style x:Key="btn_SubmitWithoutBorder" TargetType="Button">
        <Setter Property="FontFamily" Value="{Binding FontFamily, Source={x:Static SofSetting:SofSetting.Default}}" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource solidclr_ButtonBlue}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
    </Style>
    <!--  純文字取消按鈕  -->
    <Style x:Key="btn_CancelWithoutBorder" TargetType="Button">
        <Setter Property="FontFamily" Value="{Binding FontFamily, Source={x:Static SofSetting:SofSetting.Default}}" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource solidclr_SilverGray}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
    </Style>
</ResourceDictionary>