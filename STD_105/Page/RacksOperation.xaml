<WPFBase:BasePage
    x:Class="STD_105.RacksOperation"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:GDP="clr-namespace:GD_STD.Properties;assembly=GD_STD"
    xmlns:STD105VM="clr-namespace:WPFSTD105.ViewModel;assembly=WPFSTD105"
    xmlns:STDEnum="clr-namespace:GD_STD.Enum;assembly=GD_STD.Enum"
    xmlns:WPFBase="clr-namespace:WPFWindowsBase;assembly=WPFWindowsBase"
    xmlns:WPFSTD="clr-namespace:WPFSTD105;assembly=WPFSTD105"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:local="clr-namespace:STD_105"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Name="page"
    Title="RacksOperation"
    d:DesignHeight="1049"
    d:DesignWidth="800"
    x:TypeArguments="STD105VM:RacksOperationVM"
    mc:Ignorable="d">
    <Grid>
        <Grid.Resources>
            <Style BasedOn="{StaticResource gbx_WithBorder}" TargetType="GroupBox">
                <Setter Property="Margin" Value="5" />
            </Style>
            <Style BasedOn="{StaticResource rad_Hook1}" TargetType="RadioButton" />
            <Style TargetType="Border">
                <Setter Property="BorderBrush" Value="{StaticResource solidclr_DimGray}" />
                <Setter Property="Height" Value="40" />
                <Setter Property="Width" Value="120" />
            </Style>
        </Grid.Resources>
        <GroupBox Header="料架控制器">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <!--  料架選擇  -->
                <GroupBox
                    Width="350"
                    HorizontalAlignment="Left"
                    Header="料架選擇">
                    <Grid HorizontalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Border
                            Grid.Column="0"
                            Background="{StaticResource solidclr_DimGray}"
                            BorderThickness="2,2,0,2"
                            CornerRadius="20,0,0,20" />
                        <Border
                            Grid.Column="1"
                                Background="{StaticResource solidclr_DimGray}"
                            BorderThickness="2"
                            CornerRadius="0,20,20,0" />
                        <!--<Border Grid.Column="2" CornerRadius="0,10,10,0" BorderThickness="0,2,2,2" Background="{ Binding ElementName=rad_Wheel, Path=IsChecked, Converter={ WPFBase:BoolToColorCodeConverter }}"/>-->
                        <RadioButton
                            x:Name="rad_Entrance"
                            Grid.Column="0"
                            Command="{Binding SelectEntranceRackCommand}"
                            Content="入口料架"
                            IsChecked="{Binding ApplicationViewModel.PanelButton.EntranceRack, Source={x:Static WPFSTD:ViewLocator.Instance}}"
                            IsEnabled="{Binding EntranceReadOnly}" />
                        <RadioButton
                            x:Name="rad_Exit"
                            Grid.Column="1"
                            Command="{Binding SelectExportRackCommand}"
                            Content="出口料架"
                            IsChecked="{Binding ApplicationViewModel.PanelButton.ExportRack, Source={x:Static WPFSTD:ViewLocator.Instance}}"
                            IsEnabled="{Binding ExportReadOnly}" />
                        <!--<RadioButton x:Name="rad_Wheel" Grid.Column="2" Content="上浮滾輪"/>-->
                    </Grid>
                </GroupBox>
                <StackPanel Grid.ColumnSpan="2"
                            HorizontalAlignment="Right"
                            Orientation="Horizontal">
                    <Button Content="出口台車"
                            VerticalAlignment="Top"
                            Style="{ StaticResource btn_CommonFunctionKey_STD }" />
                    <StackPanel Orientation="Vertical">
                        <Button Content="入口尻料"
                                Style="{ StaticResource btn_CommonFunctionKey_STD }" />
                        <Button Content="檔塊升降"
                                Style="{ StaticResource btn_CommonFunctionKey_STD }" />
                    </StackPanel>                    
                    <GroupBox HorizontalAlignment="Left" Header="料架速度">
                        <CheckBox
                            Width="96"
                            Height="64"
                            IsChecked="{Binding RockSpeed}"
                            Style="{StaticResource speedDisplay}" />
                    </GroupBox>
                    <Grid HorizontalAlignment="Right">
                        <GroupBox Header="動力滾輪" IsEnabled="{ Binding OpenRoll }">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Button
                                IsEnabled="{Binding ExportReadOnly}"
                                Width="80"
                                Height="80"
                                Style="{StaticResource btn_TriangleLeft}"
                                ToolTip="滾輪逆轉" >
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                            <i:InvokeCommandAction  Command="{Binding RollerCommand}" CommandParameter="{x:Static STDEnum:MOBILE_RACK.INSIDE}"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                            <i:InvokeCommandAction  Command="{Binding RollerCommand}" CommandParameter="{x:Static STDEnum:MOBILE_RACK.NULL}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button
                                IsEnabled="{Binding ExportReadOnly}"
                                Grid.Column="2"
                                Width="80"
                                Height="80"
                                Style="{StaticResource btn_TriangleRight}"
                                ToolTip="滾輪順轉" >
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                            <i:InvokeCommandAction  Command="{Binding RollerCommand}" CommandParameter="{x:Static STDEnum:MOBILE_RACK.OUTER}"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                            <i:InvokeCommandAction  Command="{Binding RollerCommand}" CommandParameter="{x:Static STDEnum:MOBILE_RACK.NULL}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                            </Grid>
                        </GroupBox>
                        <CheckBox HorizontalAlignment="Right" VerticalAlignment="Top" Style="{ StaticResource CheckedStyle }"
                                  IsChecked="{ Binding OpenRoll }" Margin="0,10,-10,0"/>
                    </Grid>                    
                </StackPanel>
                <!--入口控制器設定
                <GroupBox Grid.Column="1" Header="入口控制器設定" >
                    <StackPanel>
                        <local:AssembledControl4 LeftText="料架控制數量" RightText="1-1" Margin="3" ReadOnly="True"/>
                        <local:AssembledControl4 LeftText="料架控制端" RightText="前/後" Margin="3" ReadOnly="True"/>
                    </StackPanel>
                </GroupBox>
                -->
                <!--  料架控制器  -->
                <GroupBox
                    Grid.Row="1"
                    Grid.ColumnSpan="2"
                    Header="液壓升降"
                    IsEnabled="{ Binding OpenRoll, Converter={ WPFBase:InverseLogicBoolConverter } }">
                    <GroupItem>
                        <Grid Margin="5" VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Border
                                Grid.ColumnSpan="2"
                                    Background="{StaticResource solidclr_DimGray}"
                                CornerRadius="10"
                                Style="{StaticResource bor_LightThinLine}" />
                            <!--  入口  -->
                            <Viewbox Margin="20">
                                <WPFBase:KnobAddControl Style="{ StaticResource KnobStyle }"
                                    CurrentValue="{Binding CurrentValue}"
                                    GaugeBackgroundColor="{StaticResource clr_DimGray}"
                                    IsEnabled="{Binding ApplicationViewModel.PanelButton.EntranceRack, Source={x:Static WPFSTD:ViewLocator.Instance}, Converter={WPFBase:NoNullBooleanToVisibilityConverter}}"
                                    KnobButtonCommand="{Binding SelectCountCommand}"
                                    MajorDivisionsCount="{Binding EntranceTraverseNumber, Source={x:Static GDP:Optional.Default}, Converter={local:RackMajorDivisionsCountConverter}}"
                                    MajorTickColor="{StaticResource clr_LightGray}"
                                    MajorTickSize="15,3"
                                    MaxValue="{Binding EntranceTraverseNumber, Source={x:Static GDP:Optional.Default}}"
                                    MinValue="2"
                                    ArcRadius="205"
                                    ArcColor="{ StaticResource clr_ButtonBlue }"
                                    MinorDivisionsCount="1"
                                    MinorTickColor="{StaticResource clr_LightGray}"
                                    MinorTickSize="3,1"
                                    PointerCapRadius="180"
                                    PointerLength="100"
                                    PointerThickness="65"
                                    Radius="150"
                                    ScaleLabelFontSize="20"
                                    ScaleLabelForeground="{StaticResource clr_LightGray}"
                                    ScaleLabelRadius="120"
                                    ScaleLabelSize="40,20"
                                    ScaleRadius="95"
                                    ScaleStartAngle="160"
                                    ScaleSweepAngle="220" />
                            </Viewbox>
                            <!--  出口  -->
                            <Viewbox Margin="20">
                                <WPFBase:KnobAddControl Style="{ StaticResource KnobStyle }"                                    
                                    CurrentValue="{Binding CurrentValue}"
                                    GaugeBackgroundColor="{StaticResource clr_DimGray}"
                                    KnobButtonCommand="{Binding SelectCountCommand}"
                                    MajorDivisionsCount="{Binding ExportTraverseNumber, Source={x:Static GDP:Optional.Default}, Converter={local:RackMajorDivisionsCountConverter}}"
                                    MajorTickColor="{StaticResource clr_LightGray}"
                                    MajorTickSize="15,3"
                                    MaxValue="{Binding ExportTraverseNumber, Source={x:Static GDP:Optional.Default}}"
                                    MinValue="2"
                                    MinorDivisionsCount="1"
                                    MinorTickColor="{StaticResource clr_LightGray}"
                                    MinorTickSize="3,1"
                                    PointerCapRadius="180"
                                    PointerLength="100"
                                    PointerThickness="65"
                                    Radius="150"
                                    ArcRadius="205"
                                    ArcColor="{ StaticResource clr_ButtonBlue }"
                                    ScaleLabelFontSize="20"
                                    ScaleLabelForeground="{StaticResource clr_LightGray}"
                                    ScaleLabelRadius="120"
                                    ScaleLabelSize="40,20"
                                    ScaleRadius="95"
                                    ScaleStartAngle="160"
                                    ScaleSweepAngle="220"
                                    Visibility="{Binding ApplicationViewModel.PanelButton.ExportRack, Source={x:Static WPFSTD:ViewLocator.Instance}, Converter={WPFBase:NoNullBooleanToVisibilityConverter}}" />
                            </Viewbox>
                            <Border
                                Grid.Column="1"
                                Margin="10,20"
                                CornerRadius="10"
                                Style="{StaticResource bor_LightThinLine}">
                                <local:DirectionKeys Margin="20" DataContext="{Binding DataContext, ElementName=page}" />
                            </Border>
                        </Grid>
                    </GroupItem>
                </GroupBox>

                <!--<GroupBox Grid.Row="1" Grid.Column="1" Header="液壓橫移">
                    <GroupItem>
                        <Border CornerRadius="10" Background="#FF303030" Style="{ StaticResource bor_LightThinLine }">
                            <StackPanel Margin="40,10">
                                <local:RackControlSlider/>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Border Grid.ColumnSpan="3" CornerRadius="10" Style="{ StaticResource bor_LightThinLine }"/>
                                    <Button Grid.Column="0" ToolTip="前進" Margin="5" >
                                        <Image Source="{ StaticResource ForwardArrow }" RenderTransformOrigin="0.5,0.5">
                                            <Image.RenderTransform>
                                                <RotateTransform Angle="180"/>
                                            </Image.RenderTransform>
                                        </Image>
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                                <i:InvokeCommandAction  Command="{Binding MoveCommand}" CommandParameter="{x:Static STDEnum:MOBILE_RACK.INSIDE}"/>
                                            </i:EventTrigger>
                                            <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                                <i:InvokeCommandAction  Command="{Binding MoveCommand}" CommandParameter="{x:Static STDEnum:MOBILE_RACK.NULL}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Button>
                                    <Button Grid.Column="2" ToolTip="後退" Margin="5">
                                        <Image Source="{ StaticResource ForwardArrow }"/>
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                                <i:InvokeCommandAction  Command="{Binding MoveCommand}" CommandParameter="{x:Static STDEnum:MOBILE_RACK.OUTER}"/>
                                            </i:EventTrigger>
                                            <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                                <i:InvokeCommandAction  Command="{Binding MoveCommand}" CommandParameter="{x:Static STDEnum:MOBILE_RACK.NULL}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Button>
                                </Grid>
                            </StackPanel>
                        </Border>
                    </GroupItem>
                </GroupBox>-->

                <!--  上浮滾輪  -->
                <!--<GroupBox Grid.Row="1" Grid.ColumnSpan="2" Header="滾輪操作" Visibility="{ Binding ElementName=rad_Wheel, Path=IsChecked, Converter={ WPFBase:NoNullBooleanToVisibilityConverter }}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Border Grid.RowSpan="3" Grid.ColumnSpan="3" CornerRadius="10" Background="#FF303030" Style="{ StaticResource bor_LightThinLine }"/>
                        <Button Grid.Column="1" ToolTip="順轉" Margin="5">
                            <Image Source="{ StaticResource TopArrow }"/>
                        </Button>
                        <Button Grid.Row="2" Grid.Column="1" ToolTip="逆轉" Margin="5">
                            <Image Source="{ StaticResource TopArrow }" RenderTransformOrigin="0.5,0.5">
                                <Image.RenderTransform>
                                    <RotateTransform Angle="180"/>
                                </Image.RenderTransform>
                            </Image>
                        </Button>
                        <Button Grid.Row="1" Grid.Column="2" ToolTip="前進" Margin="5">
                            <Image Source="{ StaticResource ForwardArrow }"/>
                        </Button>
                        <Button Grid.Row="1" Grid.Column="0" ToolTip="後退" Margin="5">
                            <Image Source="{ StaticResource ForwardArrow }" RenderTransformOrigin="0.5,0.5">
                                <Image.RenderTransform>
                                    <RotateTransform Angle="180"/>
                                </Image.RenderTransform>
                            </Image>
                        </Button>
                    </Grid>
                </GroupBox>-->
                <GroupBox
                    Grid.Row="2"
                    Grid.ColumnSpan="2"
                    Header="3D視圖" />
            </Grid>
        </GroupBox>
    </Grid>
</WPFBase:BasePage>
