<WPFBase:BasePage x:Class="STD_105.Office.ProductSettingsPage_Office"
                  x:TypeArguments="STD105VM:ObSettingVM"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                  xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                  xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
                  xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys"
                  xmlns:dxp="http://schemas.devexpress.com/winfx/2008/xaml/printing"   
                  xmlns:GD_STDEnum="clr-namespace:GD_STD.Enum;assembly=GD_STD.Enum"
                  mc:Ignorable="d"
                  xmlns:WPFSTD="clr-namespace:WPFSTD105;assembly=WPFSTD105"
                  xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"                  
                  xmlns:STD105VM="clr-namespace:WPFSTD105.ViewModel;assembly=WPFSTD105"
                  xmlns:WPFBase="clr-namespace:WPFWindowsBase;assembly=WPFWindowsBase"
                  xmlns:ddes="http://schemas.devdept.com/winfx/2008/xaml/control"
                  xmlns:ddgr="http://schemas.devdept.com/winfx/2008/xaml/graphics"
                  xmlns:STD105="clr-namespace:STD_105"
                  xmlns:STD105ValidRule="clr-namespace:STD_105.ValidationRules"
                  xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                  xmlns:System="clr-namespace:System;assembly=mscorlib"
                  Width="{Binding OfficeViewModel.PageHostWidth, Source={x:Static WPFSTD:ViewLocator.Instance}}"
                  Height="{Binding OfficeViewModel.PageHostHeight, Source={x:Static WPFSTD:ViewLocator.Instance}}"
                  Title="製品設定">
    <!--頁面框架-->
    <WPFBase:BasePage.Resources>
        <ResourceDictionary>
            <SolidColorBrush x:Key="PrimaryHueLightBrush" Color="White"/>
            <SolidColorBrush x:Key="PrimaryHueLightForegroundBrush" Color="#FFFFFF"/>
            <SolidColorBrush x:Key="PrimaryHueMidBrush" Color="{StaticResource WordBlue}"/>
            <SolidColorBrush x:Key="PrimaryHueMidForegroundBrush" Color="#FFFFFF"/>
            <SolidColorBrush x:Key="PrimaryHueDarkBrush" Color="Green"/>
            <SolidColorBrush x:Key="PrimaryHueDarkForegroundBrush" Color="#FFFFFF"/>
            <!-- accent -->
            <SolidColorBrush x:Key="SecondaryHueMidBrush" Color="#5C5B5E"/>
            <SolidColorBrush x:Key="SecondaryHueMidForegroundBrush" Color="#FFFFFF"/>

            <STD105:OBJECT_TYPE_ToStringConverter x:Key="obType" />
            <!--<local:MATERIAL_ToStringConverter x:Key="Material"/>-->
            <STD105:FACE_ToStringConverter x:Key="Face" />
            <STD105:START_HOLE_ToStringConverter x:Key="StartHole" />

            <Style x:Key="MaterialDesignStyleCustomTextBox" TargetType="TextBox" BasedOn="{StaticResource MaterialDesignTextBoxBase}">
                <Setter Property="Foreground" Value="{ StaticResource solidclr_DimGray }" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="FontFamily" Value="Microsoft JhengHei"/>
                <Setter Property="Background" Value="White"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="Gray"/>
                <Setter Property="Height" Value="18"/>
                <Setter Property="Padding" Value="5,-5,5,0"/>
            </Style>

            <Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignTextBoxBase}">
                <Setter Property="Foreground" Value="{ StaticResource solidclr_DimGray }" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="Margin" Value="5" />
                <Setter Property="FontFamily" Value="Microsoft JhengHei"/>
                <Setter Property="Background" Value="White"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="Gray"/>
            </Style>
            <System:Boolean x:Key="visible">false</System:Boolean>
            <System:Boolean x:Key="TextBoxEnabled">false</System:Boolean>
        </ResourceDictionary>
    </WPFBase:BasePage.Resources>
    <!--物件設定與設定完成的物件列表-->
    <Grid x:Name="DataGrid" dx:ThemeManager.ThemeName="Win10Light"    Background="#d3d3d3"    >
        <Grid.Resources>
            <Style TargetType="GroupBox" BasedOn="{ StaticResource MaterialDesignGroupBox }" >
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Background" Value="#F7F7F7"/>
                <Style.Resources>
                    <Style TargetType="materialDesign:ColorZone" >
                        <Setter Property="TextBlock.Foreground" Value="Black"/>
                        <Setter Property="TextBlock.FontSize" Value="16"/>
                        <Setter Property="Background" Value="#f0f0f0"/>
                        <Setter Property="BorderBrush" Value="#cfcfcf"/>
                        <Setter Property="BorderThickness" Value="0,0,0,1"/>
                    </Style>
                    <Style TargetType="Border">
                        <Setter Property="BorderThickness" Value="5"/>
                    </Style>
                </Style.Resources>
            </Style>


            <Style TargetType="Button"  BasedOn="{StaticResource SiegCustomButtonWhite}"   >

                <Setter Property="Width" Value="80"/>
                <Setter Property="Height" Value="24"/>
            </Style>
            <Style TargetType="CheckBox"
                   BasedOn="{ StaticResource BaseStyle }">
            </Style>

            <Style TargetType="ComboBox"
                   BasedOn="{ StaticResource BaseStyle }">
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="Margin" Value="5,0"/>
                <Setter Property="Height" Value="24"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>
            <Style TargetType="Label"
                   BasedOn="{ StaticResource lab_SubTitle }">
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="Foreground" Value="Black"/>
            </Style>


            <Style TargetType="dxg:GridColumnHeader">
                <Setter Property="FontWeight" Value="DemiBold"/>
                <Setter Property="FontSize" Value="12"/>
            </Style>

        </Grid.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="440" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Column="0">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" MinHeight="50" />
            <RowDefinition Height="480" MaxHeight="915" MinHeight="51"/>
        </Grid.RowDefinitions>
        <Grid Margin="5">
                <Grid.Resources>
                    <Style TargetType="dxg:GridColumn" >
                        <Setter Property="HorizontalHeaderContentAlignment" Value="Center"/>
                        <Setter Property="AllowGrouping" Value="false"/>
                    </Style>
                    <Style TargetType="dxe:TextEditSettings">
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    </Style>
                 <!--   <SolidColorBrush x:Key="{dxgt:TableViewThemeKey ResourceKey=SearchPanelBackground, IsThemeIndependent=True}" Color="#f0f0f0" />-->
                </Grid.Resources>
                <dxg:GridControl Name="PieceListGridControl" 
                                 Style="{StaticResource SiegCustom_CompactGridControl}"
                                 AutoGenerateColumns="None"
                                 SelectionMode="None"
                                 MaxHeight="2000"
                                 AllowLiveDataShaping="True"
                                 ItemsSource="{Binding DataViews, UpdateSourceTrigger=PropertyChanged}" SelectedItemChanged="Grid_SelectedChange" MouseDown="Button_PreviewMouseLeftButtonDown">
                    <dxg:GridControl.View >
                    <dxg:TableView VerticalScrollbarVisibility="Visible"
                                       IsColumnMenuEnabled ="False"
                                        HighlightItemOnHover="True"
                                       AllowSorting="false"
                                       AllowColumnFiltering="False"
                                       AllowColumnMoving="False"
                                       
                                       HeaderPosition="SearchPanel"
                                       ShowGroupPanel="False"
                                       ShowSearchPanelMode="Always"
                                       SearchPanelNullText="Search Tasks(Ctrl + F)" 
                                       SearchPanelFindMode="Always" 
                                       SearchDelay="0"
                                       AllowEditing="False"
                                       EnableImmediatePosting="True"
                                       FocusedRow="">

                        <dxg:TableView.Header>
                            <TextBlock Text="零件清單" FontSize="16" Foreground="Black"/>
                        </dxg:TableView.Header>
                    </dxg:TableView>
                </dxg:GridControl.View>

                    <dxg:GridColumn Name="Exc_GridColumn" Binding="{Binding steelAttr.ExclamationMark, UpdateSourceTrigger=PropertyChanged}" IsSmart="True" Image="{dx:DXImage 'SvgImages/Scheduling/HighImportance.svg'}" ImageAlignment="Center" MaxWidth="35" FixedWidth="True">
                    <dxg:GridColumn.HeaderImageStyle>
                        <Style TargetType="Image">
                            <Setter Property="Width" Value="20"></Setter>
                            <Setter Property="Margin" Value="-3"></Setter>
                        </Style>
                    </dxg:GridColumn.HeaderImageStyle>
                    <dxg:GridColumn.CellTemplate>
                        <DataTemplate>
                            <dxe:CheckEdit x:Name="PART_Editor" IsChecked="{Binding steelAttr.ExclamationMark, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                <dxe:CheckEdit.Style>
                                    <Style TargetType="{x:Type dxe:CheckEdit}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type dxe:CheckEdit}">
                                                    <dx:DXImage x:Name="HighImportanceDX" Height="20" Width="20" Source="{dx:DXImage 'SvgImages/Outlook Inspired/HighImportance.svg'}" Opacity="1" />
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsChecked" Value="False">
                                                            <Setter Property="Opacity" Value="0" TargetName="HighImportanceDX" />
                                                        </Trigger>
                                                        <Trigger Property="IsChecked"  Value="{x:Null}">
                                                            <Setter Property="Opacity" Value="0" TargetName="HighImportanceDX" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </dxe:CheckEdit.Style>
                            </dxe:CheckEdit>
                        </DataTemplate>
                    </dxg:GridColumn.CellTemplate>
                </dxg:GridColumn>

                    <!--<dxg:GridColumn Binding="{Binding steelAttr.ExclamationMark}" IsSmart="True"   Header="構件編號111" Width="auto" Visible="true"/>-->
                    
                    <dxg:GridColumn FieldName="LockMark"  IsSmart="True" Image="{dx:DXImage 'SvgImages/Icon Builder/Security_Lock.svg'}" ImageAlignment="Center" MaxWidth="35" FixedWidth="True" Visible="false">
                    <dxg:GridColumn.HeaderImageStyle>
                        <Style TargetType="Image">
                            <Setter Property="Width" Value="20"></Setter>
                            <Setter Property="Margin" Value="0"></Setter>
                        </Style>
                    </dxg:GridColumn.HeaderImageStyle>
                    <dxg:GridColumn.CellTemplate>
                        <DataTemplate>
                            <dxe:CheckEdit x:Name="PART_Edit" IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                <dxe:CheckEdit.Template>
                                    <ControlTemplate>
                                        <dx:DXImage  Width="25" Height="25">
                                            <dx:DXImage.Style>
                                                <Style TargetType="{x:Type Image}">
                                                    <Setter Property="Source" Value="{dx:DXImage 'SvgImages/Icon Builder/Security_Unlock.svg'}" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=dxe:CheckEdit}}" Value="true">
                                                            <Setter Property="Source" Value="{dx:DXImage 'SvgImages/Icon Builder/Security_Lock.svg'}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </dx:DXImage.Style>
                                        </dx:DXImage>
                                    </ControlTemplate>
                                </dxe:CheckEdit.Template>
                            </dxe:CheckEdit>
                        </DataTemplate>
                    </dxg:GridColumn.CellTemplate>
                </dxg:GridColumn>
                <!--<dxg:GridColumn FieldName="{Binding Creation, Converter={STD105:DateTimeConverter} }" IsSmart="True" Header="建立日期"  >-->
                <dxg:GridColumn FieldName="Creation" IsSmart="True" Header="建立日期"  Width="90">
                    <dxg:GridColumn.CellStyle>
                        <Style>
                            <Setter Property="TextBlock.Foreground" Value="Gray"/>
                        </Style>
                    </dxg:GridColumn.CellStyle>
                </dxg:GridColumn>
                    <dxg:GridColumn Binding="{Binding Revise, Converter={STD105:DateTimeConverter} }"  IsSmart="True" Header="修改日期" Width="90">
                    <!--<dxg:GridColumn FieldName="Revise" IsSmart="True" Header="修改日期"  Width="90">-->
                    <dxg:GridColumn.CellStyle>
                        <Style>
                            <Setter Property="TextBlock.Foreground" Value="Gray"/>
                        </Style>
                    </dxg:GridColumn.CellStyle>
                </dxg:GridColumn>

                    <dxg:GridColumn Binding="{Binding steelAttr.GUID}" IsSmart="True" Header="dm檔名" Width="auto" Visible="{StaticResource visible}"/>
                    <dxg:GridColumn Binding="{Binding steelAttr.AsseNumber}" IsSmart="True"   Header="構件編號" Width="60"/>
                    <dxg:GridColumn Binding="{Binding steelAttr.PartNumber}" IsSmart="True"  Header="零件編號" Width="60" />
                    <dxg:GridColumn Binding="{Binding steelAttr.Name,UpdateSourceTrigger=PropertyChanged}" IsSmart="True" Header="名稱" Width="80"/>
                    <!--<dxg:GridColumn Binding="{Binding TypeDesc}" IsSmart="True" Header="鋼材類別" Visible="{StaticResource visible}"/>-->
                    <!--FieldName="TypeDesc"-->
                    <dxg:GridColumn Binding="{Binding Path=SteelType, Converter={STD105:SteelTypeToStringConverter}, StringFormat={}}"  IsSmart="True" Header="鋼材類別" Width="60"/>
                    <dxg:GridColumn Binding="{Binding steelAttr.Profile}"  IsSmart="True" Header="斷面規格"  Width="140"/>
                    <!--FieldName="Profile"-->
                    <!--<dxg:GridColumn Binding="{Binding SteelType}"   IsSmart="True" Header="鋼材類型(Index)" Visible="{StaticResource visible}"/>-->
                    <!--FieldName="SteelType"-->
                    <dxg:GridColumn Binding="{Binding steelAttr.Material}"  IsSmart="True"  Header="材質"  Width="80"/>
                <!--FieldName="Material"-->
                <dxg:GridColumn Binding="{Binding Count}"   IsSmart="True"  Width="40" Header="數量"  />
                <!--FieldName="Count"-->
                <dxg:GridColumn Binding="{Binding steelAttr.Length}" IsSmart="True" Header="零件長" Width="70">
                    <dxg:GridColumn.EditSettings>
                        <dxe:TextEditSettings Mask="f0" MaskType="Numeric" MaskUseAsDisplayFormat="true"/>
                    </dxg:GridColumn.EditSettings>
                </dxg:GridColumn>
                <dxg:GridColumn Binding="{Binding steelAttr.Weight}" IsSmart="True" Header="零件重" Width="70">
                    <!--FieldName="Weight"-->
                    <dxg:GridColumn.EditSettings>
                        <dxe:TextEditSettings Mask="f1" MaskType="Numeric" MaskUseAsDisplayFormat="true"/>
                    </dxg:GridColumn.EditSettings>
                </dxg:GridColumn>
                    <!--<dxg:GridColumn Binding="{Binding steelAttr.H}" IsSmart="True"  Header="高度" Width="auto" Visible="{StaticResource visible}"/>-->
                    <!--<dxg:GridColumn Binding="{Binding steelAttr.W}" IsSmart="True"  Header="寬度" Width="auto" Visible="{StaticResource visible}"/>-->
                <!--<dxg:GridColumn Binding="{Binding steelAttr.t1}" IsSmart="True"  Header="腹板厚度" Width="auto" Visible="{StaticResource visible}"/>-->
                <!--<dxg:GridColumn Binding="{Binding steelAttr.t2}" IsSmart="True"  Header="翼板厚度" Width="auto" Visible="{StaticResource visible}"/>-->

                    <!--<dxg:GridColumn Binding="{Binding steelAttr.Kg}"  IsSmart="True"  Width="40" Header="Phase" />-->
                    <dxg:GridColumn Binding="{Binding steelAttr.Phase}"  IsSmart="True"  Width="40" Header="Phase" />
                    <dxg:GridColumn Binding="{Binding steelAttr.ShippingNumber}"  IsSmart="True"  Width="40" Header="拆運"  />
                <dxg:GridColumn Binding="{Binding steelAttr.Title1}" IsSmart="True"  Width="45" Header="標題一"  />
                <dxg:GridColumn Binding="{Binding steelAttr.Title2}" IsSmart="True"  Width="45" Header="標題二"  />

                <!--<dxg:GridColumn FieldName="AssemblyNumber" IsSmart="True"   Header="構件編號" Width="auto"/>
                        <dxg:GridColumn FieldName="PartNumber" IsSmart="True"  Header="零件編號" Width="auto" />
                    <dxg:GridColumn IsSmart="True" Header="名稱" Width="auto"/>-->
                <!--資料沒有對應屬性-->
                <!--<dxg:GridColumn Binding="{Binding Path=SteelType, Converter={STD105:SteelTypeToStringConverter}, StringFormat={}}"  IsSmart="True" Header="鋼材類型"/>                          
                        <dxg:GridColumn FieldName="Profile" IsSmart="True"  Header="斷面規格"  Width="auto"/>
                        <dxg:GridColumn FieldName="Material"  IsSmart="True"  Header="材質"  Width="auto"/>
                        <dxg:GridColumn Binding="{Binding Match, Converter={STD105:IListToCountConerter}}" Header="數量"  />
                        <dxg:GridColumn FieldName="PieceLength"  IsSmart="True"  Header="零件長" Width="auto">
                            <dxg:GridColumn.EditSettings>
                                <dxe:TextEditSettings DisplayFormat="F2" HorizontalContentAlignment="Center"/>
                            </dxg:GridColumn.EditSettings>
                        </dxg:GridColumn>       
                        <dxg:GridColumn FieldName="PieceWeight" IsSmart="True"  Header="零件重"  Width="auto" >-->
                <!--資料沒有對應屬性-->
                <!--
                            <dxg:GridColumn.EditSettings>
                                <dxe:TextEditSettings DisplayFormat="F2" HorizontalContentAlignment="Center"/>
                            </dxg:GridColumn.EditSettings>
                        </dxg:GridColumn>
                        <dxg:GridColumn Binding="{Binding Phase}" IsSmart="True"  Width="auto" Header="Phase"  />
                        <dxg:GridColumn Binding="{Binding ShippingNumber}" IsSmart="True"  Width="auto" Header="拆運"  />
                        <dxg:GridColumn FieldName="" IsSmart="True"  Width="auto" Header="標題一"  />-->
                <!--資料沒有對應屬性-->
                <!--
                        <dxg:GridColumn FieldName="" IsSmart="True"  Width="auto" Header="標題二"  />-->
                <!--資料沒有對應屬性-->

            </dxg:GridControl>
        </Grid>
 
        <!--繪圖顯示模型-->
            <Grid  Grid.Column="0" Grid.Row="1">
        <TabControl Margin="5"  Style="{StaticResource DrawTabControl}"  
                    SelectionChanged="TabControlSelectedIndexChanged"
                    x:Name="tabControl"                              
                    SelectedIndex="0">
                    <TabItem Header="3D視圖" Style="{StaticResource DrawTabItem}">
                <Grid >
                    <!--新增3D模型處-->
                            <WPFSTD:ModelExt x:Name="model" 
                                  
                                  SelectionChanged="model_SelectionChanged"
                                  Loaded="Model3D_Loaded"
                                  AutoRefresh="True"
                                  SelectionColor="{Binding Setting.SelectionColor, Converter={STD105:StringToDrawingColoConverter}}"
                                  ActionMode="{Binding ActionMode}"
                                  DefaultColor="Beige"
                                  KeyDown="model_KeyDown"
                                  PreviewMouseRightButtonDown="model_PreviewMouseRightButtonDown"
                                  Focusable="True"
                                  AntiAliasingSamples="x16"
                                  Renderer="NativeExperimental"                                  
                                  ShowFps="True">
                        <WPFSTD:ModelExt.ContextMenu>
                            <ContextMenu Style="{StaticResource BaseStyle}"
                                         FontSize="12">
                                <MenuItem Name="esc"
                                          Header="取消"
                                          Style="{StaticResource BaseStyle}"
                                          Command="{Binding Esc}" />
                                <MenuItem Header="放大選取範圍"
                                          Style="{StaticResource BaseStyle}"
                                          Command="{Binding ZoomWindow}" />
                                <MenuItem Header="縮放"
                                          Style="{StaticResource BaseStyle}"
                                          Command="{Binding Zoom}" />
                                <MenuItem Header="旋轉"
                                          Style="{StaticResource BaseStyle}"
                                          Command="{Binding Rotate}" />
                                <MenuItem Header="平移"
                                          Style="{StaticResource BaseStyle}"
                                          Command="{Binding Pan}" />
                                <MenuItem Name="edit"
                                          Header="編輯已選擇"
                                          Style="{StaticResource BaseStyle}"
                                          Command="{Binding EditObject}"
                                          Visibility="Collapsed" /> 
                                        <MenuItem x:Name="delete"
                                          Header="刪除已選擇"
                                          Style="{StaticResource BaseStyle}"
                                          Command="{Binding Delete}"
                                          Visibility="Collapsed" />
                                <MenuItem Header="清除標註"
                                          Command="{Binding ClearDim}"
                                          CommandParameter="{Binding ElementName=model}"
                                          Style="{StaticResource BaseStyle}" />
                                <MenuItem Header="恢復上一個動作"
                                          Command="{Binding Recovery}"
                                          Style="{StaticResource BaseStyle}" Visibility="Collapsed" />
                                <MenuItem Header="恢復下一個動作"
                                          Command="{Binding Recovery}"
                                          Style="{StaticResource BaseStyle}" Visibility="Collapsed" />
                            </ContextMenu>
                        </WPFSTD:ModelExt.ContextMenu>
                        <WPFSTD:ModelExt.ProgressBar>
                            <ddes:ProgressBar Lighting="False" />
                        </WPFSTD:ModelExt.ProgressBar>
                        <WPFSTD:ModelExt.Viewports>
                            <ddes:Viewport DisplayMode="Flat"
                                           InitialView="vcFrontFaceTopLeft"
                                           OriginSymbols="{Binding OriginSymbols}"
                                           SmallSizeRatio="0.001">
                                <ddes:Viewport.Background>
                                    <ddgr:BackgroundSettings StyleMode="Solid" TopColor="#303030"/>
                                </ddes:Viewport.Background>
                                <ddes:Viewport.CoordinateSystemIcon>
                                    <ddes:CoordinateSystemIcon Lighting="True"
                                                               ArrowColorX="{Binding Setting.ArrowColorX, Converter={WPFBase:StringRGBToBrushConverter}}"
                                                               ArrowColorY="{Binding Setting.ArrowColorY, Converter={WPFBase:StringRGBToBrushConverter}}"
                                                               ArrowColorZ="{Binding Setting.ArrowColorZ, Converter={WPFBase:StringRGBToBrushConverter}}" />
                                </ddes:Viewport.CoordinateSystemIcon>
                                <ddes:Viewport.Camera>
                                    <ddes:Camera Distance="380"
                                                 ProjectionMode="Orthographic"
                                                 Target="0, 0, 45"
                                                 ZoomFactor="2" />
                                </ddes:Viewport.Camera>
                                <ddes:Viewport.Rotate>
                                    <ddes:RotateSettings RotationCenter="CursorLocation" />
                                </ddes:Viewport.Rotate>
                                <ddes:Viewport.ToolBars>
                                    <ddes:ToolBar>
                                        <ddes:ToolBar.Buttons>
                                            <ddes:HomeToolBarButton/>
                                            <ddes:ZoomWindowToolBarButton />
                                            <ddes:ZoomToolBarButton />
                                            <ddes:PanToolBarButton />
                                            <ddes:RotateToolBarButton />
                                            <ddes:ZoomFitToolBarButton />
                                            <ddes:ToolBarButton ToolTipText="線性標註"
                                                                Click="LinearDim"
                                                                StyleMode="PushButton" Visible="False"
                                                                Image="{Binding Source={StaticResource AngleDim},Converter={STD105:DrawingImageToBitmapSourceConverter}}" />
                                            <ddes:ToolBarButton ToolTipText="角度標註"
                                                                StyleMode="PushButton" Visible="False"
                                                                Image="{Binding Source={StaticResource AngleDim},Converter={STD105:DrawingImageToBitmapSourceConverter}}" />
                                            <ddes:ToolBarButton ToolTipText="絕對座標"
                                                                StyleMode="PushButton" Visible="False"
                                                                Image="{Binding Source={StaticResource AbsDim},Converter={STD105:DrawingImageToBitmapSourceConverter}}" />
                                        </ddes:ToolBar.Buttons>
                                    </ddes:ToolBar>
                                </ddes:Viewport.ToolBars>
                                <ddes:Viewport.ViewCubeIcon>
                                    <ddes:ViewCubeIcon Lighting="True"
                                                       FrontColor="{Binding Setting.ViewCubeIconColor, Converter={WPFBase:StringRGBToBrushConverter}}"
                                                       BackColor="{Binding Setting.ViewCubeIconColor, Converter={WPFBase:StringRGBToBrushConverter}}"
                                                       TopColor="{Binding Setting.ViewCubeIconColor, Converter={WPFBase:StringRGBToBrushConverter}}"
                                                       BottomColor="{Binding Setting.ViewCubeIconColor, Converter={WPFBase:StringRGBToBrushConverter}}"
                                                       RightColor="{Binding Setting.ViewCubeIconColor, Converter={WPFBase:StringRGBToBrushConverter}}"
                                                       LeftColor="{Binding Setting.ViewCubeIconColor, Converter={WPFBase:StringRGBToBrushConverter}}"
                                                       BackRingLabel="北"
                                                       FrontRingLabel="南"
                                                       RightRingLabel="東"
                                                       LeftRingLabel="西"
                                                       LeftRingColor="White"
                                                       RightRingColor="White"
                                                       FrontRingColor="White"
                                                       BackRingColor="White" />
                                </ddes:Viewport.ViewCubeIcon>
                            </ddes:Viewport>
                        </WPFSTD:ModelExt.Viewports>
                    </WPFSTD:ModelExt>
                </Grid>
            </TabItem>
            <TabItem Header="2D視圖"    Style="{StaticResource DrawTabItem}" Height="40" VerticalAlignment="Top">
                <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                    <WPFSTD:ModelExt x:Name="drawing"  

                                     SelectionChanged="model_SelectionChanged" Loaded="drawing_Loaded"
                        SelectionColor="{Binding Setting.SelectionColor, Converter={STD105:StringToDrawingColoConverter}}"
                        ActionMode="{Binding ActionMode}" DefaultColor="Beige" AutoRefresh ="True" KeyDown="model_KeyDown"
                        PreviewMouseRightButtonDown="model_PreviewMouseRightButtonDown"
                        Focusable="True" AntiAliasingSamples="x16" Renderer="NativeExperimental" Margin="0,0,0,0">
                        <WPFSTD:ModelExt.ContextMenu>
                            <ContextMenu Style="{StaticResource BaseStyle}" FontSize="12" >
                                <MenuItem Name="esc2D" Header="取消" Style="{StaticResource BaseStyle}" Command="{Binding Esc}"/>
                                <MenuItem Header="放大選取範圍" Style="{StaticResource BaseStyle}" Command="{Binding ZoomWindow}"/>
                                <MenuItem Header="縮放" Style="{StaticResource BaseStyle}" Command="{Binding Zoom}"/>
                                <MenuItem Header="平移" Style="{StaticResource BaseStyle}" Command="{Binding Pan}"/>
                                <MenuItem Name="edit2D" Header="編輯已選擇" Style="{StaticResource BaseStyle}" Command="{Binding EditObject}" Visibility="Collapsed"/>
                                <MenuItem x:Name="delete2D" Header="刪除已選擇" Style="{StaticResource BaseStyle}" Command="{Binding Delete}" Visibility="Collapsed"/>
                                <MenuItem Header="清除標註" Command="{Binding ClearDim}" Style="{StaticResource BaseStyle}"/>
                                <MenuItem Header="恢復上一個動作" Command="{Binding Recovery}" Style="{StaticResource BaseStyle}"/>
                                        <MenuItem Header="恢復下一個動作" Command="{Binding Recovery}" Style="{StaticResource BaseStyle}"/>
                                        <!--<MenuItem Header="{Binding EditObjectVisibility, UpdateSourceTrigger=PropertyChanged}" Command="{Binding Recovery}" Style="{StaticResource BaseStyle}"/>-->
                                    </ContextMenu>
                        </WPFSTD:ModelExt.ContextMenu>
                        <ddes:Model.ProgressBar>
                            <ddes:ProgressBar Lighting="False"/>
                        </ddes:Model.ProgressBar>
                        <ddes:Model.Viewports>
                            <ddes:Viewport DisplayMode="Flat" InitialView="Top"  OriginSymbols="{Binding OriginSymbols}">
                                <ddes:Viewport.Background>
                                    <ddgr:BackgroundSettings StyleMode="Solid" TopColor="#303030"/>
                                </ddes:Viewport.Background>
                                <ddes:Viewport.Camera>
                                    <ddes:Camera Distance="380" ProjectionMode="Orthographic" Target="0, 0, 45" ZoomFactor="2"/>
                                </ddes:Viewport.Camera>
                                <ddes:Viewport.Rotate>
                                    <ddes:RotateSettings RotationCenter="CursorLocation" Enabled="False"/>
                                </ddes:Viewport.Rotate>
                                <ddes:Viewport.ToolBars>
                                    <ddes:ToolBar>
                                        <ddes:ToolBar.Buttons>
                                            <ddes:HomeToolBarButton/>
                                            <ddes:ZoomWindowToolBarButton/>
                                            <ddes:ZoomToolBarButton/>
                                            <ddes:PanToolBarButton/>
                                            <ddes:RotateToolBarButton />
                                            <ddes:ZoomFitToolBarButton/>
                                            <ddes:ToolBarButton ToolTipText="線性標註" Click="LinearDim" StyleMode="PushButton"   
                                                                Image="{Binding Source={materialDesign:PackIcon Kind=Ruler},Converter={STD105:MaterialDesignPackIconToBitmapSourceConverter}}"
                                                                     />
                                            <ddes:ToolBarButton ToolTipText="角度標註" Click="AngleDim" StyleMode="PushButton"
                                                Image="{Binding Source={materialDesign:PackIcon Kind=AngleAcute},Converter={STD105:MaterialDesignPackIconToBitmapSourceConverter}}"/>
                                            <!--<ddes:ToolBarButton ToolTipText="絕對座標" StyleMode="PushButton"
                                                Image="{Binding Source={materialDesign:PackIcon Kind=AxisArrow},Converter={STD105:MaterialDesignPackIconToBitmapSourceConverter}}"/>-->
                                        </ddes:ToolBar.Buttons>
                                    </ddes:ToolBar>
                                </ddes:Viewport.ToolBars>
                            </ddes:Viewport>
                        </ddes:Model.Viewports>
                    </WPFSTD:ModelExt>
                            <STD105:DrawButtonBar Grid.Row="1"/>
                  </Grid>
            </TabItem>
        </TabControl>
            </Grid>
            <GridSplitter Grid.Row="0" Grid.Column="1" Background="Gray"  HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Height="4"  Margin="0,-2" MouseUp="GridSplitter_MouseMove" />

        </Grid>
        
        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="485"/>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <!--零件屬性-->
            <GroupBox Header="零件屬性" Grid.Column="1" Margin="6">
                <Grid>
                    <Grid.Resources>
                        <Style TargetType ="TextBlock">
                            <Setter Property="FontSize" Value="12"/>
                            <Setter  Property="Foreground" Value="Black" />
                        </Style>
                        <Style TargetType="Label"
                               BasedOn="{ StaticResource lab_SubTitle }">
                            <Setter Property="Foreground"
                                    Value="Black" />
                            <Setter Property="FontSize" Value="12"/>
                            <Setter Property="Margin" Value="5"/>
                        </Style>

                    </Grid.Resources>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="80"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="10"/>
                        <ColumnDefinition Width="80"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />

                    </Grid.RowDefinitions>
                    <Label Content="零件編號："  />
                    <TextBox  Grid.Column="1" Name="partNumber" >
                        <TextBox.Text>
                            <Binding Path="PartNumberProperty" UpdateSourceTrigger="PropertyChanged" >
                                <Binding.ValidationRules>
                                    <STD105ValidRule:CheckStringEmptyRule/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <Label Grid.Column="0" Grid.Row="1" Content="構件編號：" />

                    <TextBox Name="asseNumber" Grid.Column="1" Grid.Row="1">
                        <TextBox.Text>
                            <Binding Path="AssemblyNumberProperty" UpdateSourceTrigger="PropertyChanged" >
                                <Binding.ValidationRules>
                                    <STD105ValidRule:CheckStringEmptyRule/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <!--<TextBox Name="EditObjectVisibility111" Grid.Column="1" Grid.Row="1">
                        <TextBox.Text>
                            <Binding Path="EditObjectVisibility" UpdateSourceTrigger="PropertyChanged" >
                                <Binding.ValidationRules>
                                    <STD105ValidRule:CheckStringEmptyRule/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>-->
                    <Label Grid.Column="0"  Grid.Row="2"
                           Content="製品長度：" />
                    <Grid  Grid.Column="1" Grid.Row="2" VerticalAlignment="Center" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Grid.Column="0" Name="Length"  >
                            <TextBox.Text>
                                <Binding Path="ProductLengthProperty" StringFormat="{}{0:N0}" UpdateSourceTrigger="PropertyChanged" >
                                    <Binding.ValidationRules>
                                        <STD105ValidRule:CheckNumberRule NumberMin="0"/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>

                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged" SourceName="Length">
                                    <i:InvokeCommandAction Command="{ Binding CalculateWeightCommand }"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                        <TextBlock Grid.Column="1" Text="mm" Margin="3,0,0,0" VerticalAlignment="Center"/>
                    </Grid>


                    <Label Grid.Column="0" Grid.Row="3" Content="製品重：" />
                    <Grid Grid.Column="1" Grid.Row="3" VerticalAlignment="Center" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Grid.Column="0" Name="Weight" Text="{Binding ProductWeightProperty, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:N1}}" IsEnabled="False" Margin="6,0,0,0"/>
                        <TextBlock Grid.Column="1"  Text="Kg"   Margin="3,5,0,0"/>

                    </Grid>


                    <Label Grid.Column="0" Grid.Row="4" Content="製品數量：" />

                    <TextBox Grid.Column="1" Grid.Row="4" Name="PartCount">
                        <TextBox.Text>
                            <!--<Binding Path="SteelAttr.Number" StringFormat="{}" UpdateSourceTrigger="PropertyChanged" >-->
                            <Binding Path="ProductCountProperty" StringFormat="{}" UpdateSourceTrigger="PropertyChanged" >
                                <Binding.ValidationRules>
                                    <STD105ValidRule:CheckNumberRule NumberMin="0"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <Label Grid.Column="0" Grid.Row="5" Content="名稱：" />

                    <!--<TextBox Name ="teklaName" Grid.Column="1" Grid.Row="5" Text="{Binding Path=SelectedItems[0].TeklaName , ElementName=PieceListGridControl , Mode=OneWay , UpdateSourceTrigger=PropertyChanged}" >-->
                    <TextBox Name ="teklaName" Grid.Column="1" Grid.Row="5" Text="{Binding Path=ProductNameProperty ,UpdateSourceTrigger=PropertyChanged}" >
                        <!--     <TextBox.Text>
                                <Binding Path="SelectedItems[0].TeklaName" ElementName="PieceListGridControl" Mode="OneWay" UpdateSourceTrigger="PropertyChanged" >
                                    <Binding.ValidationRules>
                                    <STD105ValidRule:CheckStringEmptyRule></STD105ValidRule:CheckStringEmptyRule>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>-->
                    </TextBox>

                    <Label Grid.Column="0"  Grid.Row="6" Content="材質：" />

                    <!--<ComboBox Grid.Column="1" Grid.Row="6" Name="material" ItemsSource="{Binding Materials, Converter={STD105:MaterialToNameConverter}}" SelectedValue="{Binding SelectedItems[0].Material, ElementName=PieceListGridControl, Mode=OneWay}" Padding="5,1,0,0" />-->
                    <ComboBox Grid.Column="1" Grid.Row="6" Name="material" ItemsSource="{Binding Materials, Converter={STD105:MaterialToNameConverter}}" SelectedValue="{Binding ProductMaterialProperty}" Padding="5,1,0,0" />


                    <Label Grid.Column="0" Grid.Row="7" Content="Phase：" />
                    
                    <TextBox x:Name="phase" Grid.Column="1" Grid.Row="7" >
                        <TextBox.Text>
                            <!--<Binding Path="SelectedItems[0].Phase" ElementName="PieceListGridControl" Mode="OneWay" UpdateSourceTrigger="PropertyChanged" >-->
                            <Binding Path="PhaseProperty" UpdateSourceTrigger="PropertyChanged"  Converter="{STD105:NullableIntConverter}" >
                                <Binding.ValidationRules>
                                    <STD105ValidRule:CheckNumberRule NumberMin="0" IsNullable="True"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>                        
                    </TextBox>                   
                    <Label Grid.Column="0" Grid.Row="8" Content="拆運：" />

                    <TextBox x:Name="shippingNumber" Grid.Column="1" Grid.Row="8">
                        <TextBox.Text>
                            <!--<Binding Path="SelectedItems[0].ShippingNumber" ElementName="PieceListGridControl" Mode="OneWay" UpdateSourceTrigger="PropertyChanged" >-->
                            <Binding Path="ShippingNumberProperty" UpdateSourceTrigger="PropertyChanged"  Converter="{STD105:NullableIntConverter}">
                                <Binding.ValidationRules>
                                    <STD105ValidRule:CheckNumberRule NumberMin="0" IsNullable="True"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <Label Grid.Column="0" Grid.Row="9" Content="標題一：" />

                    <TextBox Grid.Column="1" Grid.Row="9" Name="Title1">
                        <TextBox.Text>
                            <!--<Binding Path="SelectedItems[0].Title1" ElementName="PieceListGridControl" StringFormat="{}{0:N2}" Mode="OneWay" UpdateSourceTrigger="PropertyChanged" >-->
                            <Binding Path="Title1Property" UpdateSourceTrigger="PropertyChanged" >

                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <Label Grid.Column="0" Grid.Row="10" Content="標題二：" />
                    <!--<TextBox Grid.Column="1" Grid.Row="10" Name="Title2" Text="{Binding SelectedItems[0].Title2, ElementName=PieceListGridControl,Mode=OneWay}"/>-->
                    <!--<TextBox Grid.Column="1" Grid.Row="10" Name="Title2" Text="{Binding Title2Property, Mode=OneWay}"/>-->
                    <TextBox Grid.Column="1" Grid.Row="10" Name="Title2">
                        <TextBox.Text>
                            <!--<Binding Path="SelectedItems[0].Title1" ElementName="PieceListGridControl" StringFormat="{}{0:N2}" Mode="OneWay" UpdateSourceTrigger="PropertyChanged" >-->
                            <Binding Path="Title2Property" UpdateSourceTrigger="PropertyChanged" >

                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <StackPanel Grid.Column="4"  Grid.Row="7" Grid.RowSpan="3" >
                        <!--<TextBox Text="{Binding SelectedItems[0].Type, ElementName=PieceListGridControl}" BorderBrush="Black"/>
                        <TextBox Text="{Binding SelectedItems[0].TypeDesc, ElementName=PieceListGridControl}" BorderBrush="Black"/>
                        <TextBox Text="{Binding SteelSectionProperty, ElementName=PieceListGridControl}" BorderBrush="Black"/>-->
                    </StackPanel>

                    <Label Grid.Column="3" Grid.Row="0"
                           Content="型鋼類型：" />

                    <ComboBox x:Name="cbx_SteelTypeComboBox"
                              Grid.Column="4"  Grid.Row="0" 
                              ItemsSource="{Binding Source={StaticResource obType},Path=Strings}"
                              SelectedIndex="{Binding SteelTypeProperty_int}"
                              Padding="5,1,0,0">
                        <!--SelectedIndex="{Binding SelectedItems[0].SteelType, ElementName=PieceListGridControl, Mode=OneWay}"-->
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged" SourceName="cbx_SteelTypeComboBox">
                                <i:InvokeCommandAction Command="{ Binding ShowSteelTypeCommand }"
                                                           CommandParameter="{ Binding ElementName=cbx_SteelTypeComboBox, Path=SelectedIndex }"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                    <Label Grid.Column="3" Grid.Row="1"
                           Content="斷面規格：" />

                    <ComboBox x:Name="cbx_SectionTypeComboBox"
                                  Grid.Column="4" Grid.Row="1"
                                  Padding="5,1,0,0"
                                  ItemsSource="{Binding ProfileList, UpdateSourceTrigger=PropertyChanged}" 
                                  DisplayMemberPath="Profile" 
                                  Text="{Binding SteelSectionProperty, UpdateSourceTrigger=PropertyChanged}" SelectionChanged="CBOX_SectionTypeChanged"
                                 IsSynchronizedWithCurrentItem="True"
                              >
                        <ComboBox.ItemContainerStyle>
                            <Style TargetType="ComboBoxItem">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Content, 
                        RelativeSource={RelativeSource Self}, 
                            Converter={STD105:SectionSpecificationToEnabledConverter}}" 
                            Value="true">
                                        <Setter Property="IsEnabled" 
                            Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ComboBox.ItemContainerStyle>

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged" SourceName="cbx_SectionTypeComboBox">
                                <i:InvokeCommandAction Command="{ Binding CalculateWeightCommand }"/>
                            </i:EventTrigger>
                            <!--<i:EventTrigger EventName="SelectionChanged" SourceName="cbx_SectionTypeComboBox">
                                <i:InvokeCommandAction Command="{ Binding ShowSteelTypeFromPartListCommand }"
                                                           CommandParameter="{ Binding ElementName=cbx_SectionTypeComboBox, Path=SelectedItem }"/>
                            </i:EventTrigger>-->
                        </i:Interaction.Triggers>
                        
                    </ComboBox>

                    <Label Grid.Column="3" Grid.Row="2" Content="高度(H)：" />
                    <Grid Grid.Column="4" Grid.Row="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Grid.Column="0" Name="H" Text="{Binding CurrentPartSteelAttr.H, UpdateSourceTrigger=PropertyChanged}" IsEnabled="False" />
                        <TextBlock Grid.Column="1" Text="mm" VerticalAlignment="Center"/>

                    </Grid>

                    <Label Grid.Column="3" Grid.Row="3" Content="寬度(B)：" />
                    <Grid Grid.Column="4" Grid.Row="3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Grid.Column="0" Name="W" Text="{Binding CurrentPartSteelAttr.W, UpdateSourceTrigger=PropertyChanged}" IsEnabled="False" />
                        <TextBlock Grid.Column="1" Text="mm" VerticalAlignment="Center"/>
                    </Grid>

                    <Label Grid.Column="3" Grid.Row="4" Content="腹板厚度(s)：" />

                    <Grid  VerticalAlignment="Center" Grid.Column="4" Grid.Row="4">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Grid.Column="0" Name="t1" Text="{Binding CurrentPartSteelAttr.t1, UpdateSourceTrigger=PropertyChanged}" IsEnabled="False"/>
                        <TextBlock Grid.Column="1" Text="mm"   VerticalAlignment="Center"/>
                    </Grid>

                    <Label Grid.Column="3" Grid.Row="5" Content="翼板厚度(t)：" />
                    <Grid Grid.Column="4" Grid.Row="5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Grid.Column="0" Name="t2" Text="{Binding CurrentPartSteelAttr.t2, UpdateSourceTrigger=PropertyChanged}" IsEnabled="False"/>
                        <TextBlock Grid.Column="1" Text="mm" VerticalAlignment="Center" />

                    </Grid>

                    <Button Grid.Column="3" Grid.Row="6" Grid.ColumnSpan="2" x:Name="btn_FileOverView" Content="FileOverView" Command="{Binding FileOverView}"  Style="{StaticResource SiegCustomButtonGold}" Width="90" HorizontalAlignment="Left" Visibility="Collapsed" />

                    <StackPanel Grid.Row="13" Margin="2" Orientation="Horizontal" Grid.ColumnSpan="5">
                        <Button x:Name="btn_OKtoConfirmChanges" Content="OK" Command="{Binding OKtoConfirmChanges}" Style="{StaticResource SiegCustomButtonGold}" Width="80" Margin="0,0,6,0" Click="OKtoConfirmChanges"/>
                        
                        <STD105:DataButtons_Office 
                                               Modify="{Binding ModifyPart}"
                                               Add="{Binding AddPart}"
                                               ReadVisibility="Collapsed"
                                               DeleteVisibility="Collapsed"/>
                        <Button x:Name="btn_AddNewOne" Content="另存" Command="{Binding AddNewOne}" DockPanel.Dock="Left" Width="76" Margin="0,0,0,0" Visibility="Collapsed"/>

                        <!--鎖頭的行為要與按鈕的開啟關閉binding 0902-->
                    </StackPanel>
                </Grid>
            </GroupBox>
            <!--繪圖顯示模型-->
            <Border Background="#F0F0F0" Margin="5"   Grid.Column="1" Grid.Row="1" >
                <TabControl>
                    <TabControl.Resources>
                        <ResourceDictionary>
                            <Style TargetType="TabItem">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type TabItem}">
                                            <Grid x:Name="Root">
                                                <Border x:Name="Border" Margin="10"
                                                    Width="{Binding ElementName=ContentSite, Path=Width}"
                                                    Height="{Binding ElementName=ContentSite, Path=Height}"
                                                    VerticalAlignment="Center"
                                                    Background="Transparent"
                                                    BorderBrush="Transparent"
                                                    BorderThickness="0,0,0,2">
                                                    <ContentPresenter x:Name="ContentSite"
                                                                  Margin="0,2"
                                                                  HorizontalAlignment="Center"
                                                                  VerticalAlignment="Center"
                                                                  ContentSource="Header"
                                                                  RecognizesAccessKey="True"
                                                                  TextBlock.FontSize="16"
                                                                  TextBlock.Foreground="black" />
                                                </Border>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">

                                                        <VisualState x:Name="Normal" />
                                                        <VisualState x:Name="Selected">
                                                            <Storyboard>
                                                                <ColorAnimation Storyboard.TargetName="ContentSite"
                                                                            Storyboard.TargetProperty="(TextBlock.Foreground).Color"
                                                                            To="#000000"
                                                                            Duration="0" />

                                                                <ColorAnimation Storyboard.TargetName="Border"
                                                                            Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                                            To="#5c93a7"
                                                                            Duration="0" />
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ResourceDictionary>
                    </TabControl.Resources>

                    <TabItem Margin="0,0,0,0" Header="鑽孔" Name="DrillTabItem"  >
                        <TabItem.Resources>
                            <Style TargetType="GroupBox" BasedOn="{StaticResource BaseStyle}" >
                                <Setter Property="Foreground" Value="#3b3b3b"/>
                                <Setter Property="Margin" Value="5"/>
                            </Style>

                        </TabItem.Resources>
                        <DockPanel >
                            <Grid DockPanel.Dock="Top">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <GroupBox Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" BorderThickness="0,0,0,1" >
                                    <!--直徑設定-->
                                    <Grid Margin="0,-30,0,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <CheckBox Grid.Column="0" Grid.Row="0" VerticalAlignment="Center" IsChecked="{Binding CheckDia}" Content="孔直徑" />
                                        <TextBox Grid.Column="1" Grid.Row="0" VerticalAlignment="Center">
                                            <TextBox.Text>
                                                <Binding Path="GroupBoltsAttr.Dia" StringFormat="{}" UpdateSourceTrigger="PropertyChanged" >
                                                    <Binding.ValidationRules>
                                                        <STD105ValidRule:CheckNumberRule NumberMin="0"/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                        <!--孔的起始位置-->
                                        <CheckBox  Grid.Column="0" Grid.Row="1" VerticalAlignment="Center"  IsChecked="{Binding CheckStartHole}" Content="位置"/>

                                        <ComboBox SelectedIndex="{Binding StartHoleType}"  Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" 
                                                  ItemsSource="{Binding Source={StaticResource StartHole}, Path=Strings}"
                                                  Padding="5,1,0,0"/>


                                        <CheckBox Grid.Column="0" Grid.Row="2" VerticalAlignment="Center"  Content="孔輪廓" Visibility="Collapsed" Margin="10,0"/>

                                        <ComboBox  Grid.Column="1" Grid.Row="2" VerticalAlignment="Center" Margin="5,5,10,5" Visibility="Collapsed"
                                                  SelectedIndex="{Binding AxisModeType}" >
                                            <ComboBoxItem Content="鑽孔" />
                                            <ComboBoxItem Content="打點" />
                                        </ComboBox>


                                        <CheckBox  Grid.Column="2" Grid.Row="0" IsChecked="False"  Content="孔X向起步點：" />

                                        <TextBox Grid.Column="3" Grid.Row="0" VerticalAlignment="Center">
                                            <TextBox.Text>
                                                <Binding Path="GroupBoltsAttr.X" UpdateSourceTrigger="PropertyChanged" >
                                                    <Binding.ValidationRules>
                                                        <STD105ValidRule:CheckNumberRule NumberMin="0"/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>

                                        <CheckBox Grid.Column="2" Grid.Row="1" IsChecked="False" Content="孔Y向起步點：" />

                                        <TextBox Grid.Column="3" Grid.Row="1" VerticalAlignment="Center">
                                            <TextBox.Text>
                                                <Binding Path="StartY" StringFormat="{}" UpdateSourceTrigger="PropertyChanged" >
                                                    <Binding.ValidationRules>
                                                        <STD105ValidRule:CheckNumberRule NumberMin="0"/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>

                                    </Grid>
                                </GroupBox>

                                <DockPanel Grid.Column="0" Grid.Row="1" >
                                    <GroupBox Header="孔群設定" Grid.Column="0" Grid.Row="1">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>

                                            <CheckBox Grid.Column="0" Grid.Row="0" VerticalAlignment="Center" Content="形狀："/>

                                            <ComboBox Grid.Column="2" Grid.Row="0" Margin="5" VerticalAlignment="Center" SelectedIndex="0" Padding="5,1,0,0">
                                                <ComboBoxItem Content="陣列"/>
                                            </ComboBox>

                                            <CheckBox  Grid.Column="0" Grid.Row="1"  IsChecked="{Binding CheckX}" Content="孔X向間距："/>

                                            <TextBox  Grid.Column="1" Grid.Row="1" MinWidth="100" VerticalAlignment="Center" >
                                                <TextBox.Text>
                                                    <Binding Path="GroupBoltsAttr.dX" UpdateSourceTrigger="PropertyChanged" >
                                                        <Binding.ValidationRules>
                                                            <STD105ValidRule:CheckHoleGroupArrayStringRule/>
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>

                                            </TextBox>

                                            <CheckBox Grid.Column="0" Grid.Row="2" IsChecked="{Binding CheckY}" Content="孔Y向間距：" />
                                            <TextBox  Grid.Column="1" Grid.Row="2"  MinWidth="100" VerticalAlignment="Center">
                                                <TextBox.Text>
                                                    <Binding Path="GroupBoltsAttr.dY" UpdateSourceTrigger="PropertyChanged" >
                                                        <Binding.ValidationRules>
                                                            <STD105ValidRule:CheckHoleGroupArrayStringRule/>
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>

                                        </Grid>
                                    </GroupBox>
                                    <GroupBox Header="位置" Grid.Column="1" Grid.Row="1">
                                        <!--舊下拉式選單-->
                                        <!--
                                        <StackPanel Orientation="Horizontal" Visibility="Collapsed">
                                            <CheckBox IsChecked="{Binding CheckFace}" />
                                            <ComboBox ItemsSource="{Binding Source={StaticResource Face},Path=Strings}"
                                                      SelectedIndex="{Binding BoltsFaceType}" Width="50"/>
                                        </StackPanel>-->
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>

                                            <RadioButton  Margin="0,3,0,0" Grid.Row="0" GroupName="DrillingPosition" Foreground="Black" Style="{StaticResource rad_Gray}" IsChecked="{Binding Path=rbtn_DrillingFace, Mode=TwoWay, Converter={STD105:DrillingFaceConverter}, ConverterParameter=1}">
                                                <RadioButton.Content>
                                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,-2" >
                                                        <Label Content="前面"/>
                                                        <Label Margin="40,0,0,0" Content="右翼板" />
                                                    </StackPanel>
                                                </RadioButton.Content>
                                            </RadioButton>

                                            <RadioButton Margin="0,3,0,0" Grid.Row="1" VerticalAlignment="Center" GroupName="DrillingPosition" Foreground="Black"  Style="{StaticResource rad_Gray}" IsChecked="{Binding Path=rbtn_DrillingFace, Mode=TwoWay, Converter={STD105:DrillingFaceConverter}, ConverterParameter=0}">
                                                <RadioButton.Content>
                                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,-2">
                                                        <Label Content="頂面"/>
                                                        <Label Margin="40,0,0,0" Content="腹板" />
                                                    </StackPanel>
                                                </RadioButton.Content>
                                            </RadioButton>

                                            <RadioButton  Margin="0,3,0,0" Grid.Row="2" GroupName="DrillingPosition" Foreground="Black"  Style="{StaticResource rad_Gray}" IsChecked="{Binding Path=rbtn_DrillingFace, Mode=TwoWay, Converter={STD105:DrillingFaceConverter}, ConverterParameter=2}">
                                                <RadioButton.Content>
                                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,-2">
                                                        <Label Content="後面"/>
                                                        <Label Margin="40,0,0,0" Content="左翼板" />
                                                    </StackPanel>
                                                </RadioButton.Content>
                                            </RadioButton>


                                        </Grid>
                                    </GroupBox>
                                </DockPanel>
                                <!-- X軸數量-->
                                <!--StackPanel Grid.Row="2"
                                    Grid.Column="1"
                                    Orientation="Horizontal"
                                    HorizontalAlignment="Center">
                            <Label Content="數量：" />
                            <TextBox Text="{Binding GroupBoltsAttr.xCount}"
                                     Width="80" />
                        </StackPanel-->
                                <!-- Y軸數量-->
                                <!--
                        <StackPanel Grid.Row="3"
                                    Grid.Column="1"
                                    Orientation="Horizontal"
                                    HorizontalAlignment="Center">
                            <Label Content="數量：" />
                            <TextBox Text="{Binding GroupBoltsAttr.yCount}"
                                     Width="80" />
                        </StackPanel>-->
                                <!--選擇面-->
                                <!--鏡射-->


                            </Grid>

                            <StackPanel  Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" DockPanel.Dock="Bottom"  VerticalAlignment="Bottom">
                                <!--<StackPanel  Orientation="Horizontal"
                                         HorizontalAlignment="Left"
                                         VerticalAlignment="Bottom"
                                         Margin="5">
                                    <Button Content ="X軸鏡射" Command="{Binding MirrorX}" Margin="0,0,0,0" Width="80" Height="24"  />
                                    <Button Content="Y軸鏡射" Command="{Binding MirrorY}" Margin="5,0,0,0" Width="80" Height="24"  />

                                    <Button Content="rbtn choice" Command="{Binding Path=CmdShowMessage}" Margin="5" Width="80" Height="24" Visibility="Collapsed"/>
                                </StackPanel>-->

                                <StackPanel  Grid.Row="3"   Grid.ColumnSpan="2"  Orientation="Horizontal" HorizontalAlignment="Right">

                                    <Button Command="{Binding SetAllCheckboxCheckedCommand}" CommandParameter="{Binding ElementName=DrillTabItem}"  Width="80" Margin="0,0,-7,0"   Style="{StaticResource SiegCustomButtonGray}" Cursor="Hand" >
                                        <Button.Content >
                                            <StackPanel Orientation="Horizontal">
                                                <materialDesign:PackIcon Kind="CheckboxOutline" />
                                                <TextBlock Text="／"/>
                                                <materialDesign:PackIcon Kind="CheckboxBlankOutline" />
                                            </StackPanel>
                                        </Button.Content>
                                    </Button>

                                    <STD105:DataButtons_Office
                                     
                                        HorizontalAlignment="Left"
                                        ReadVisibility="Collapsed" 
                                        Delete="{Binding DeleteHole}"
                                        Add="{Binding AddHole}"
                                        Modify="{Binding ModifyHole}"
                                        Margin="10,0,-4,0"/>
                                </StackPanel>
                            </StackPanel>
                        </DockPanel>

                    </TabItem>
                    <TabItem Header="切割線" Name="CutTabItem">
                        <ScrollViewer VerticalScrollBarVisibility="Auto" Name="ScrollViewbox">
                            <Grid >
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <StackPanel Orientation="Horizontal">
                                    <GroupBox Header="位置" Style="{StaticResource BaseStyle}" Padding="0">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>

                                            <RadioButton  Margin="0,0,0,0" Grid.Row="0" GroupName="CutLinePosition" Foreground="Black" Style="{StaticResource rad_Gray}" IsChecked="{Binding Path=rbtn_CutFace, Mode=TwoWay, Converter={STD105:CutFaceConverter}, ConverterParameter=1}" Command="{Binding rb_CutLinePosition_Command}">
                                                <RadioButton.Content>
                                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,0" >
                                                        <Label Content="前面"/>
                                                        <Label Margin="40,0,0,0" Content="右翼板" />
                                                    </StackPanel>
                                                </RadioButton.Content>
                                            </RadioButton>

                                            <RadioButton Margin="0,-10,0,0" Grid.Row="1" VerticalAlignment="Center" GroupName="CutLinePosition" Foreground="Black"  Style="{StaticResource rad_Gray}" IsChecked="{Binding Path=rbtn_CutFace, Mode=TwoWay, Converter={STD105:CutFaceConverter}, ConverterParameter=0}" Command="{Binding rb_CutLinePosition_Command}">
                                                <RadioButton.Content>
                                                    <StackPanel Orientation="Horizontal" Margin="0,6,0,0" >
                                                        <Label Content="頂面"/>
                                                        <Label Margin="40,0,0,0" Content="腹板" />
                                                    </StackPanel>
                                                </RadioButton.Content>
                                            </RadioButton>

                                            <RadioButton  Margin="0,-10,0,0" Grid.Row="2" GroupName="CutLinePosition" Foreground="Black"  Style="{StaticResource rad_Gray}" IsEnabled="False" IsChecked="{Binding Path=rbtn_CutFace, Mode=TwoWay, Converter={STD105:CutFaceConverter}, ConverterParameter=2}" Command="{Binding rb_CutLinePosition_Command}">
                                                <RadioButton.Content>
                                                    <StackPanel Orientation="Horizontal" Margin="0,6,0,0">
                                                        <Label Content="後面"/>
                                                        <Label Margin="40,0,0,0" Content="左翼板" />
                                                    </StackPanel>
                                                </RadioButton.Content>
                                            </RadioButton>

                                        </Grid>

                                        

                                    </GroupBox>
                                    <StackPanel Margin="5,8,0,0">
                                        <StackPanel Orientation="Horizontal">
                                            <StackPanel>
                                                <Button Width="60" Height="60" Click="HypotenuseLinearPoint">
                                                    <Grid >
                                                        <materialDesign:PackIcon Kind="PenPlus" Width="15" Height="15" Margin="8,0"/>
                                                        <Image Source="{StaticResource HSteel_quadDrawingImage}"  Width="40"/>
                                                    </Grid>
                                                </Button>
                                                <Label Content="新增打點" Foreground="Black"  HorizontalAlignment="Center"/>
                                            </StackPanel>
                                            <StackPanel Margin="5,0">
                                                <Button Width="60" Height="60" Click="DelHypotenuseLinearPoint">
                                                    <materialDesign:PackIcon Kind="Eraser" Width="45" Height="45"  />
                                                </Button>
                                                <Label Content="打點刪除" Foreground="Black"  HorizontalAlignment="Center"/>
                                            </StackPanel>
                                        </StackPanel>
                                    </StackPanel>
                                </StackPanel>
                                <StackPanel Grid.Row="1" Background="#303030" Height="0.5" Margin="0,5,0,0"/>
                                <GroupBox Header="切割位置" Style="{StaticResource BaseStyle}" Grid.Row="2" Margin="5" Padding="0" Height="255">
                                    <StackPanel Background="#c0c0c0" >
                                        <Canvas Width="280">
                                            <Canvas.Resources>
                                                <Style TargetType="TextBlock" BasedOn="{StaticResource fileNameStyle}"></Style>
                                            </Canvas.Resources>
                                            <ComboBox Visibility="Hidden"
                                                      Width="94"
                                                      Canvas.Left="96"
                                                      Canvas.Top="109"
                                                      ItemsSource="{Binding Source={StaticResource Face},Path=Strings}"
                                                      SelectedIndex="{Binding CutFaceType}" />
                                            <Path x:Name="pa"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"
                                                  Canvas.Left="65"
                                                  Canvas.Top="35"
                                                  Data="M147.57261,23.44316 L236.3045,23.44316 236.3045,58.513851 z M140.147,6.3996129 L243.72928,6.3996129 M147.57261,0.49999999 L147.57261,20.166036 
                                                        M236.67491,0.49999999 L236.67491,20.166036 M260.08409,17.756814 L260.08409,64.987999 M267.4995,23.363259 L242.7798,23.363259 M267.5,58.994403
                                                        L242.78027,58.994403 M120.4274,23.44316 L31.695509,23.44316 31.695509,58.513851 z M127.853,6.3996129 L24.27073,6.3996129 M120.4274,0.49999999 L120.4274,20.166036
                                                        M31.325098,0.49999999 L31.325098,20.166036 M7.9159134,17.756814 L7.9159134,64.987999 M0.50050692,23.363259 L25.220208,23.363259 M0.50000144,58.994403 
                                                        L25.219735,58.994403 M147.57261,127.04484 L236.3045,127.04484 236.3045,91.974149 z M140.147,144.08839 L243.72928,144.08839 M147.57261,149.988 L147.57261,130.32196 
                                                        M236.67491,149.988 L236.67491,130.32196 M260.08409,132.73119 L260.08409,85.500001 M267.4995,127.12474 L242.7798,127.12474 M267.5,91.493597 L242.78027,91.493597
                                                        M120.4274,127.04484 L31.695509,127.04484 31.695509,91.974149 z M127.853,144.08839 L24.27073,144.08839 M120.4274,149.988 L120.4274,130.32196 M31.325098,149.988 
                                                        L31.325098,130.32196 M7.9159134,132.73119 L7.9159134,85.500001 M0.50050692,127.12474 L25.220208,127.12474 M0.50000144,91.493597 L25.219735,91.493597"
                                                  Fill="{ StaticResource solidclr_DimGray }"
                                                  Height="160"
                                                  Width="160"
                                                  Stretch="Fill"
                                                  Stroke="{ StaticResource solidclr_DimGray }" />
                                            <TextBox Grid.Row="3"
                                                     Width="50"
                                                     Canvas.Left="81"
                                                     Canvas.Top="0">
                                                <TextBox.Text>
                                                    <Binding Path="ULPoint.X" StringFormat="{}" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                                                        <Binding.ValidationRules>
                                                            <STD105ValidRule:CheckNumberRule NumberMin="0"/>
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>
                                            <TextBox Grid.Row="3"
                                                     Width="50"
                                                     Canvas.Left="149"
                                                     Canvas.Top="0"
                                                     Text="{Binding URPoint.X,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                                <!--<TextBox.Text>
                                                    <Binding Path="URPoint.X" StringFormat="{}" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                                                        <Binding.ValidationRules>
                                                            <STD105ValidRule:CheckNumberRule NumberMin="0"/>
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>-->
                                            </TextBox>
                                            <TextBox Width="50"
                                                     Canvas.Left="10"
                                                     Canvas.Top="55">
                                                <TextBox.Text>
                                                    <Binding Path="ULPoint.Y" StringFormat="{}" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                                                        <Binding.ValidationRules>
                                                            <STD105ValidRule:CheckNumberRule NumberMin="0"/>
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>
                                            <TextBox Width="50"
                                                     Canvas.Left="10"
                                                     Canvas.Top="139">
                                                <TextBox.Text>
                                                    <Binding Path="DLPoint.Y" StringFormat="{}" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                                                        <Binding.ValidationRules>
                                                            <STD105ValidRule:CheckNumberRule NumberMin="0"/>
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>
                                            <TextBox Width="50"
                                                     Canvas.Left="220"
                                                     Canvas.Top="55">
                                                <TextBox.Text>
                                                    <Binding Path="URPoint.Y" StringFormat="{}" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                                                        <Binding.ValidationRules>
                                                            <STD105ValidRule:CheckNumberRule NumberMin="0"/>
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>
                                            <TextBox Width="50"
                                                     Canvas.Left="220"
                                                     Canvas.Top="139">
                                                <TextBox.Text>
                                                    <Binding Path="DRPoint.Y" StringFormat="{}" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                                                        <Binding.ValidationRules>
                                                            <STD105ValidRule:CheckNumberRule NumberMin="0"/>
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>
                                            <TextBox Width="50"
                                                     Canvas.Left="81"
                                                     Canvas.Top="195">
                                                <TextBox.Text>
                                                    <Binding Path="DLPoint.X" StringFormat="{}" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                                                        <Binding.ValidationRules>
                                                            <STD105ValidRule:CheckNumberRule NumberMin="0"/>
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>
                                            <TextBox Width="50"
                                                     Canvas.Left="149"
                                                     Canvas.Top="195">
                                                <TextBox.Text>
                                                    <Binding Path="DRPoint.X" StringFormat="{}" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                                                        <Binding.ValidationRules>
                                                            <STD105ValidRule:CheckNumberRule NumberMin="0"/>
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>
                                            <CheckBox IsChecked="{Binding ULCheck}"
                                                      Width="16"
                                                      Height="{ Binding RelativeSource={x:Static RelativeSource.Self}, Path=Width}"
                                                      Style="{StaticResource CheckedStyle}"
                                                      Canvas.Left="86"
                                                      Canvas.Top="70" />
                                            <CheckBox IsChecked="{Binding DLCheck}"
                                                      Width="16"
                                                      Height="{ Binding RelativeSource={x:Static RelativeSource.Self}, Path=Width}"
                                                      Style="{StaticResource CheckedStyle}"
                                                      Canvas.Left="86"
                                                      Canvas.Top="152" />
                                            <CheckBox IsChecked="{Binding URCheck}"
                                                      Width="16"
                                                      Height="{ Binding RelativeSource={x:Static RelativeSource.Self}, Path=Width}"
                                                      Style="{StaticResource CheckedStyle}"
                                                      Canvas.Left="188"
                                                      Canvas.Top="70" />
                                            <CheckBox IsChecked="{Binding DRCheck}"
                                                      Width="16"
                                                      Height="{ Binding RelativeSource={x:Static RelativeSource.Self}, Path=Width}"
                                                      Style="{StaticResource CheckedStyle}"
                                                      Canvas.Left="188"
                                                      Canvas.Top="152" />
                                        </Canvas>
                                    </StackPanel>
                                </GroupBox>

                                <StackPanel  Grid.Row="3" Grid.ColumnSpan="2"  Orientation="Horizontal" HorizontalAlignment="Right">
                                    <Button Command="{Binding SetAllCheckboxCheckedCommand}" Style="{StaticResource SiegCustomButtonGray}" CommandParameter="{Binding ElementName=CutTabItem}" Width="80" Margin="2,0"   Cursor="Hand" >
                                        <Button.Content >
                                            <StackPanel Orientation="Horizontal">
                                                <materialDesign:PackIcon Kind="CheckboxOutline" />
                                                <TextBlock Text="／"/>
                                                <materialDesign:PackIcon Kind="CheckboxBlankOutline" />
                                            </StackPanel>
                                        </Button.Content>
                                    </Button>
                                    <Button Content="輸入" Command="{Binding AddCut}" Margin="5,0"></Button>
                                    <!--
                                    <STD105:DataButtons_Office Style="{StaticResource BaseStyle}"
                                                           Modify="{Binding ModifyCut}"
                                                           Add="{Binding AddCut}"
                                                           Delete="{Binding DeleteCut}"
                                                           ReadVisibility="Collapsed" 
                                                           VerticalAlignment="Bottom"
                                                           Margin="0,0,0,0" />-->
                                </StackPanel>
                            </Grid>
                        </ScrollViewer>
                    </TabItem>
                </TabControl>
            </Border>
        </Grid>



    </Grid>
</WPFBase:BasePage>
